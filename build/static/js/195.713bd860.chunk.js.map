{"version":3,"sources":["views/apps/astrology/AstrologerList.js"],"names":["DoctorList","state","rowData","paginationPageSize","currenPageSize","getPageSize","defaultColDef","sortable","editable","resizable","suppressMenu","columnDefs","headerName","valueGetter","field","width","filter","setColumnVisible","cellRendererFramework","params","data","img","Array","isArray","className","style","color","backgroundColor","render","history","size","onClick","push","_id","onGridReady","gridApi","api","gridColumnApi","columnApi","setState","paginationGetCurrentPage","paginationGetPageSize","totalPages","paginationGetTotalPages","updateSearchQuery","val","setQuickFilter","filterSize","paginationSetPageSize","Number","axiosConfig","get","then","response","console","log","id","swal","buttons","cancel","catch","text","value","componentDidMount","error","this","sm","tag","length","right","placeholder","onChange","e","target","Ripple","exportDataAsCsv","Consumer","context","gridOptions","rowSelection","colResizeDefault","animateRows","floatingFilter","pagination","pivotPanelShow","enableRtl","direction","React","Component"],"mappings":"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","file":"static/js/195.713bd860.chunk.js","sourcesContent":["// import React from \"react\";\r\n// import {\r\n//   Card,\r\n//   CardBody,\r\n//   Input,\r\n//   Row,\r\n//   Col,\r\n//   Button,\r\n//   UncontrolledDropdown,\r\n//   DropdownMenu,\r\n//   DropdownItem,\r\n//   DropdownToggle,\r\n//   Badge,\r\n// } from \"reactstrap\";\r\n// import axiosConfig from \"../../../axiosConfig\";\r\n\r\n// import { ContextLayout } from \"../../../utility/context/Layout\";\r\n// import { AgGridReact } from \"ag-grid-react\";\r\n// import { Eye, Edit, Trash2, ChevronDown } from \"react-feather\";\r\n\r\n// import \"../../../assets/scss/plugins/tables/_agGridStyleOverride.scss\";\r\n// import \"../../../assets/scss/pages/users.scss\";\r\n// import { Route } from \"react-router-dom\";\r\n// import Breadcrumbs from \"../../../components/@vuexy/breadCrumbs/BreadCrumb\";\r\n// import swal from \"sweetalert\";\r\n\r\n// class DoctorList extends React.Component {\r\n//   state = {\r\n//     rowData: [],\r\n//     paginationPageSize: 20,\r\n//     Commission: null,\r\n//     currenPageSize: \"\",\r\n//     getPageSize: \"\",\r\n//     defaultColDef: {\r\n//       sortable: true,\r\n//       editable: true,\r\n//       resizable: true,\r\n//       suppressMenu: true,\r\n//     },\r\n//     columnDefs: [\r\n//       {\r\n//         headerName: \"S.No\",\r\n//         valueGetter: \"node.rowIndex + 1\",\r\n//         field: \"node.rowIndex + 1\",\r\n//         width: 100,\r\n//         filter: true,\r\n//       },\r\n//       // {\r\n//       //   headerName: \"Image\",\r\n//       //   field: \"userimg\",\r\n//       //   filter: false,\r\n//       //   width: 100,\r\n//       //   setColumnVisible: false,\r\n//       //   cellRendererFramework: (params) => {\r\n//       //     return (\r\n//       //       <div className=\"d-flex align-items-center cursor-pointer\">\r\n//       //         {params.data.userimg && params.data.userimg.map((i) => (\r\n//       //           <img\r\n\r\n//       //             className=\" rounded-circle  mr-3\"\r\n//       //             src={i}\r\n//       //             alt=\"user avatar\"\r\n//       //             height=\"40\"\r\n//       //             width=\"40\"\r\n//       //           />\r\n//       //         ))}\r\n//       //       </div>\r\n//       //     );\r\n//       //   },\r\n//       // },\r\n//       {\r\n//         headerName: \"Image\",\r\n//         field: \"userimg\",\r\n//         filter: false,\r\n//         width: 100,\r\n//         setColumnVisible: false,\r\n//         cellRendererFramework: (params) => {\r\n//           return (\r\n//             <div className=\"d-flex align-items-center cursor-pointer\">\r\n//               {params.data.userimg.map((i) => (\r\n//                 <img\r\n//                   className=\" rounded-circle  mr-3\"\r\n//                   src={i}\r\n//                   alt=\"user avatar\"\r\n//                   height=\"40\"\r\n//                   width=\"40\"\r\n//                 />\r\n//               ))}\r\n//             </div>\r\n//           );\r\n//         },\r\n//       },\r\n//       {\r\n//         headerName: \"Name\",\r\n//         field: \"fullname\",\r\n//         filter: true,\r\n//         width: 120,\r\n//         cellRendererFramework: (params) => {\r\n//           return (\r\n//             <div>\r\n//               <span>{params.data.fullname}</span>\r\n//             </div>\r\n//           );\r\n//         },\r\n//       },\r\n\r\n//       {\r\n//         headerName: \"Email\",\r\n//         field: \"email\t\",\r\n//         filter: true,\r\n//         width: 120,\r\n//         cellRendererFramework: (params) => {\r\n//           return (\r\n//             <div className=\"d-flex align-items-center cursor-pointer\">\r\n//               <span>{params.data.email}</span>\r\n//             </div>\r\n//           );\r\n//         },\r\n//       },\r\n//       {\r\n//         headerName: \"Phone No.\",\r\n//         field: \"mobile\",\r\n//         filter: true,\r\n//         width: 120,\r\n//         cellRendererFramework: (params) => {\r\n//           return (\r\n//             <div>\r\n//               <span>{params.data.mobile}</span>\r\n//             </div>\r\n//           );\r\n//         },\r\n//       },\r\n//       // {\r\n//       //   headerName: \"Identity\",\r\n//       //   field: \"gender\",\r\n//       //   filter: true,\r\n//       //   width: 120,\r\n//       //   cellRendererFramework: (params) => {\r\n//       //     return (\r\n//       //       <div>\r\n//       //         <span>{params.data.gender}</span>\r\n//       //       </div>\r\n//       //     );\r\n//       //   },\r\n//       // },\r\n//       {\r\n//         headerName: \"Date\",\r\n//         field: \"dob\",\r\n//         filter: true,\r\n//         width: 120,\r\n//         cellRendererFramework: (params) => {\r\n//           return (\r\n//             <div>\r\n//               <span>{params.data.dob}</span>\r\n//             </div>\r\n//           );\r\n//         },\r\n//       },\r\n//       // {\r\n//       //   headerName: \"Primary Skills\",\r\n//       //   field: \"primary_skills\",\r\n//       //   filter: true,\r\n//       //   width: 120,\r\n//       //   cellRendererFramework: (params) => {\r\n//       //     return (\r\n//       //       <div>\r\n//       //         <span>{params.data.primary_skills}</span>\r\n//       //       </div>\r\n//       //     );\r\n//       //   },\r\n//       // },\r\n//       // {\r\n//       //   headerName: \"All Skills\",\r\n//       //   field: \"all_skills\",\r\n//       //   filter: true,\r\n//       //   width: 120,\r\n//       //   cellRendererFramework: (params) => {\r\n//       //     return (\r\n//       //       <div>\r\n//       //         <span>{params.data.all_skills}</span>\r\n//       //       </div>\r\n//       //     );\r\n//       //   },\r\n//       // },\r\n\r\n//       // {\r\n//       //   headerName: \"Exprience\",\r\n//       //   field: \"exp_in_years\",\r\n//       //   filter: true,\r\n//       //   width: 120,\r\n//       //   cellRendererFramework: (params) => {\r\n//       //     return (\r\n//       //       <div>\r\n//       //         <span>{params.data.exp_in_years}</span>\r\n//       //       </div>\r\n//       //     );\r\n//       //   },\r\n//       // },\r\n//       // {\r\n//       //   headerName: \"Language\",\r\n//       //   field: \"language\",\r\n//       //   filter: true,\r\n//       //   width: 120,\r\n//       //   cellRendererFramework: (params) => {\r\n//       //     return (\r\n//       //       <div>\r\n//       //         <span>{params.data.language}</span>\r\n//       //       </div>\r\n//       //     );\r\n//       //   },\r\n//       // },\r\n//       // {\r\n//       //   headerName: \"Call charge \",\r\n//       //   field: \"callCharge\",\r\n//       //   filter: true,\r\n//       //   width: 120,\r\n//       //   cellRendererFramework: (params) => {\r\n//       //     return (\r\n//       //       <div>\r\n//       //         <span>{params.data.callCharge}</span>\r\n//       //       </div>\r\n//       //     );\r\n//       //   },\r\n//       // },\r\n//       // {\r\n//       //   headerName: \"Status\",\r\n//       //   field: \"approvedstatus\",\r\n//       //   filter: true,\r\n//       //   width: 100,\r\n//       //   cellRendererFramework: (params) => {\r\n//       //     return params.value === \"Active\" ? (\r\n//       //       <div className=\"badge badge-pill badge-success\">\r\n//       //         {params.data.approvedstatus}\r\n//       //       </div>\r\n//       //     ) : params.value === \"Deactive\" ? (\r\n//       //       <div className=\"badge badge-pill badge-warning\">\r\n//       //         {params.data.approvedstatus}\r\n//       //       </div>\r\n//       //     ) : null;\r\n//       //   },\r\n//       // },\r\n//       {\r\n//         headerName: \"Status\",\r\n//         field: \"dateofregister\",\r\n//         filter: true,\r\n//         width: 150,\r\n//         cellRendererFramework: (params) => {\r\n//           return (\r\n//             <div>\r\n//               <Badge style={{color: \"Black\",backgroundColor:\"yellow\",}}>\r\n//               <span>{params.data.status}</span>\r\n//               </Badge>\r\n//             </div>\r\n//           );\r\n//         },\r\n//       },\r\n\r\n//       // {\r\n//       //   headerName: \"Status\",\r\n//       //   field: \"status\",\r\n//       //   filter: true,\r\n//       //   width: 100,\r\n//       //   cellRendererFramework: (params) => {\r\n//       //     return params.value === \"Online\" ? (\r\n//       //       <div className=\"badge badge-pill badge-success\">\r\n//       //         {params.data.status}\r\n//       //       </div>\r\n//       //     ) : params.value === \"Offline\" ? (\r\n//       //       <div className=\"badge badge-pill badge-warning\">\r\n//       //         {params.data.status}\r\n//       //       </div>\r\n//       //     ) : null;\r\n//       //   },\r\n//       // },\r\n//       {\r\n//         headerName: \"Action\",\r\n//         field: \"sortorder\",\r\n//         width: 180,\r\n//         cellRendererFramework: (params) => {\r\n//           return (\r\n//             <div className=\"actions cursor-pointer\">\r\n//               <Route\r\n//                 render={({ history }) => (\r\n//                   <Eye\r\n//                     className=\"mr-50\"\r\n//                     size=\"25px\"\r\n//                     color=\"green\"\r\n//                     onClick={() =>\r\n//                       history.push(\r\n//                         `/app/userride/viewUserRide/${params.data._id}`\r\n//                       )\r\n//                     }\r\n//                   />\r\n//                 )}\r\n//               />\r\n//               <Route\r\n//                 render={({ history }) => (\r\n//                   <Edit\r\n//                     className=\"mr-50\"\r\n//                     size=\"25px\"\r\n//                     color=\"blue\"\r\n//                     onClick={() =>\r\n//                       history.push(\r\n//                         `/app/astrology/editAstrologer/${params.data._id}`\r\n//                       )\r\n//                     }\r\n//                   />\r\n//                 )}\r\n//               />\r\n//               <Trash2\r\n//                 className=\"mr-50\"\r\n//                 size=\"25px\"\r\n//                 color=\"red\"\r\n//                 onClick={() => {\r\n//                   let selectedData = this.gridApi.getSelectedRows();\r\n//                   this.runthisfunction(params.data._id);\r\n//                   // this.gridApi.updateRowData({ remove: selectedData });\r\n//                 }}\r\n//               />\r\n//             </div>\r\n//           );\r\n//         },\r\n//       },\r\n//     ],\r\n//   };\r\n//   async componentDidMount() {\r\n//     await axiosConfig.get(\"/admin/admin_astrop_list\").then((response) => {\r\n//       let rowData = response.data.data;\r\n//       this.setState({ rowData });\r\n//     });\r\n//     await axiosConfig.get(\"/admin/viewoneCommision\").then((response) => {\r\n//       let rowData = response?.data?.data?.admincomision;\r\n//       this.setState({ Commission: rowData });\r\n//     });\r\n//   }\r\n\r\n//   async runthisfunction(id) {\r\n//     swal(\r\n//       `Sure You Want To Delete It`,\r\n//       \"Delete Or Cancel\",\r\n\r\n//       {\r\n//         buttons: {\r\n//           cancel: \"Cancel\",\r\n//           catch: { text: \"Delete \", value: \"delete\" },\r\n//         },\r\n//       }\r\n//     ).then((value) => {\r\n//       switch (value) {\r\n//         case \"delete\":\r\n//           axiosConfig.get(`/admin/dltAstro/${id}`).then(\r\n//             (response) => {\r\n//               this.componentDidMount();\r\n//               console.log(response);\r\n//             },\r\n//             (error) => {\r\n//               console.log(error);\r\n//             }\r\n//           );\r\n//           break;\r\n//         default:\r\n//           break;\r\n//       }\r\n//     });\r\n//   }\r\n//   onGridReady = (params) => {\r\n//     this.gridApi = params.api;\r\n//     this.gridColumnApi = params.columnApi;\r\n//     this.setState({\r\n//       currenPageSize: this.gridApi.paginationGetCurrentPage() + 1,\r\n//       getPageSize: this.gridApi.paginationGetPageSize(),\r\n//       totalPages: this.gridApi.paginationGetTotalPages(),\r\n//     });\r\n//   };\r\n//   updateSearchQuery = (val) => {\r\n//     this.gridApi.setQuickFilter(val);\r\n//   };\r\n//   filterSize = (val) => {\r\n//     if (this.gridApi) {\r\n//       this.gridApi.paginationSetPageSize(Number(val));\r\n//       this.setState({\r\n//         currenPageSize: val,\r\n//         getPageSize: val,\r\n//       });\r\n//     }\r\n//   };\r\n//   handleAddCommistion = (e) => {\r\n//     if (this.state.Commission) {\r\n//       axiosConfig\r\n//         .post(`/admin/updateComision/64967ef62cf27fc5dd12416d`, {\r\n//           admincomision: this.state.Commission,\r\n//         })\r\n//         .then((res) => {\r\n//           console.log(res);\r\n//           if (res?.data?.message === \"success\") {\r\n//             swal(\"Commission Updated Succesfully\");\r\n//           }\r\n//         })\r\n//         .catch((err) => {\r\n//           console.log(err);\r\n//         });\r\n//     }\r\n//   };\r\n//   blockInvalidChar = (e) =>\r\n//     [\"e\", \"E\", \"+\", \"-\"].includes(e.key) && e.preventDefault();\r\n//   render() {\r\n//     const { rowData, columnDefs, defaultColDef } = this.state;\r\n//     return (\r\n//       <div>\r\n//         <Breadcrumbs\r\n//           breadCrumbTitle=\"User List\"\r\n//           breadCrumbParent=\"Doctor\"\r\n//           // breadCrumbActive=\" Doctor \"\r\n//         />\r\n\r\n//         <Row className=\"app-user-list\">\r\n//           <Col sm=\"12\"></Col>\r\n//           <Col sm=\"12\">\r\n//             <Card>\r\n//               <Row className=\"m-2\">\r\n//                 <Col lg=\"3\">\r\n//                   <h1 sm=\"2\" className=\"float-left\">\r\n//                     Doctor List\r\n//                   </h1>\r\n//                 </Col>\r\n\r\n//                 {/* <Col>\r\n//                     <Route\r\n//                       render={({ history }) => (\r\n//                         <Button\r\n//                           className=\" btn btn-success float-right\"\r\n//                           onClick={() =>\r\n//                             history.push(\"/app/astrology/addAstrologer\")\r\n//                           }\r\n//                         >\r\n//                           Add Doctor\r\n//                         </Button>\r\n//                       )}\r\n//                     />\r\n//                   </Col> */}\r\n//               </Row>\r\n//              {/*\r\n//               <div className=\"container\">\r\n//                 <Row>\r\n//                   <Col lg=\"3\">\r\n//                     <h4 className=\"float-left\">Set Admin Commission</h4>\r\n//                     <h6 className=\"float-left\">\r\n//                       Present Commission :{\" \"}\r\n//                       {this.state.Commission && this.state.Commission} %\r\n//                     </h6>\r\n\r\n//                   </Col>\r\n//                   <Col lg=\"4\">\r\n//                     <input\r\n//                       onKeyDown={this.blockInvalidChar}\r\n//                       type=\"number\"\r\n//                       value={this.state.Commission}\r\n//                       onChange={(e) =>\r\n//                         this.setState({ Commission: e.target.value })\r\n//                       }\r\n//                       className=\"form-control\"\r\n//                     />\r\n//                   </Col>\r\n//                   <Col lg=\"3\">\r\n//                     <Button onClick={this.handleAddCommistion} color=\"primary\">\r\n//                       Submit\r\n//                     </Button>\r\n//                   </Col>\r\n//                 </Row>\r\n//               </div>\r\n//             */}\r\n//               <CardBody>\r\n//                 {this.state.rowData === null ? null : (\r\n//                   <div className=\"ag-theme-material w-100 my-2 ag-grid-table\">\r\n//                     <div className=\"d-flex flex-wrap justify-content-between align-items-center\">\r\n//                       <div className=\"mb-1\">\r\n//                         <UncontrolledDropdown className=\"p-1 ag-dropdown\">\r\n//                           <DropdownToggle tag=\"div\">\r\n//                             {this.gridApi\r\n//                               ? this.state.currenPageSize\r\n//                               : \"\" * this.state.getPageSize -\r\n//                                 (this.state.getPageSize - 1)}{\" \"}\r\n//                             -{\" \"}\r\n//                             {this.state.rowData.length -\r\n//                               this.state.currenPageSize *\r\n//                                 this.state.getPageSize >\r\n//                             0\r\n//                               ? this.state.currenPageSize *\r\n//                                 this.state.getPageSize\r\n//                               : this.state.rowData.length}{\" \"}\r\n//                             of {this.state.rowData.length}\r\n//                             <ChevronDown className=\"ml-50\" size={15} />\r\n//                           </DropdownToggle>\r\n//                           <DropdownMenu right>\r\n//                             <DropdownItem\r\n//                               tag=\"div\"\r\n//                               onClick={() => this.filterSize(20)}\r\n//                             >\r\n//                               20\r\n//                             </DropdownItem>\r\n//                             <DropdownItem\r\n//                               tag=\"div\"\r\n//                               onClick={() => this.filterSize(50)}\r\n//                             >\r\n//                               50\r\n//                             </DropdownItem>\r\n//                             <DropdownItem\r\n//                               tag=\"div\"\r\n//                               onClick={() => this.filterSize(100)}\r\n//                             >\r\n//                               100\r\n//                             </DropdownItem>\r\n//                             <DropdownItem\r\n//                               tag=\"div\"\r\n//                               onClick={() => this.filterSize(134)}\r\n//                             >\r\n//                               134\r\n//                             </DropdownItem>\r\n//                           </DropdownMenu>\r\n//                         </UncontrolledDropdown>\r\n//                       </div>\r\n//                       <div className=\"d-flex flex-wrap justify-content-between mb-1\">\r\n//                         <div className=\"table-input mr-1\">\r\n//                           <Input\r\n//                             placeholder=\"search...\"\r\n//                             onChange={(e) =>\r\n//                               this.updateSearchQuery(e.target.value)\r\n//                             }\r\n//                             value={this.state.value}\r\n//                           />\r\n//                         </div>\r\n//                         <div className=\"export-btn\">\r\n//                           <Button.Ripple\r\n//                             color=\"primary\"\r\n//                             onClick={() => this.gridApi.exportDataAsCsv()}\r\n//                           >\r\n//                             Export as CSV\r\n//                           </Button.Ripple>\r\n//                         </div>\r\n//                       </div>\r\n//                     </div>\r\n//                     <ContextLayout.Consumer>\r\n//                       {(context) => (\r\n//                         <AgGridReact\r\n//                           gridOptions={{}}\r\n//                           rowSelection=\"multiple\"\r\n//                           defaultColDef={defaultColDef}\r\n//                           columnDefs={columnDefs}\r\n//                           rowData={rowData}\r\n//                           onGridReady={this.onGridReady}\r\n//                           colResizeDefault={\"shift\"}\r\n//                           animateRows={true}\r\n//                           floatingFilter={false}\r\n//                           pagination={true}\r\n//                           paginationPageSize={this.state.paginationPageSize}\r\n//                           pivotPanelShow=\"always\"\r\n//                           enableRtl={context.state.direction === \"rtl\"}\r\n//                         />\r\n//                       )}\r\n//                     </ContextLayout.Consumer>\r\n//                   </div>\r\n//                 )}\r\n//               </CardBody>\r\n//             </Card>\r\n//           </Col>\r\n//         </Row>\r\n//       </div>\r\n//     );\r\n//   }\r\n// }\r\n// export default DoctorList;\r\n\r\nimport React from \"react\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Input,\r\n  Row,\r\n  Col,\r\n  Button,\r\n  UncontrolledDropdown,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  DropdownToggle,\r\n  Badge,\r\n} from \"reactstrap\";\r\nimport axiosConfig from \"../../../axiosConfig\";\r\nimport { ContextLayout } from \"../../../utility/context/Layout\";\r\nimport { AgGridReact } from \"ag-grid-react\";\r\nimport {  Eye, Edit,Trash2, ChevronDown } from \"react-feather\";\r\nimport \"../../../assets/scss/plugins/tables/_agGridStyleOverride.scss\";\r\nimport \"../../../assets/scss/pages/users.scss\";\r\nimport { Route } from \"react-router-dom\";\r\n// import Breadcrumbs from \"../../../components/@vuexy/breadCrumbs/BreadCrumb\";\r\n// import SwitchEvent from \"../../forms/form-elements/switch/SwitchEvent\";\r\nimport swal from \"sweetalert\";\r\n\r\nclass DoctorList extends React.Component {\r\n  state = {\r\n    rowData: [],\r\n    paginationPageSize: 20,\r\n    currenPageSize: \"\",\r\n    getPageSize: \"\",\r\n    defaultColDef: {\r\n      sortable: true,\r\n      editable: true,\r\n      resizable: true,\r\n      suppressMenu: true,\r\n    },\r\n    columnDefs: [\r\n      {\r\n        headerName: \"S.No\",\r\n        valueGetter: \"node.rowIndex + 1\",\r\n        field: \"node.rowIndex + 1\",\r\n        width: 100,\r\n        filter: true,\r\n        // checkboxSelection: true,\r\n        // headerCheckboxSelectionFilteredOnly: true,\r\n        // headerCheckboxSelection: true,\r\n      },\r\n      {\r\n        headerName: \"Image\",\r\n        field: \"img\",\r\n        filter: false,\r\n        width: 150,\r\n        setColumnVisible: false,\r\n        cellRendererFramework: (params) => {\r\n          if (params.data && params.data.img && Array.isArray(params.data.img)) {\r\n            return (\r\n              <div className=\"d-flex align-items-center cursor-pointer\">\r\n              {/*\r\n                {params.data.img.map((i, index) => (\r\n                  <img\r\n                    key={index}\r\n                    className=\"rounded-circle mr-3\"\r\n                    src={i}\r\n                    alt=\"user avatar\"\r\n                    height=\"40\"\r\n                    width=\"40\"\r\n                  />\r\n                ))}\r\n                 */}\r\n              </div>\r\n            );\r\n          } else {\r\n            return null;\r\n          }\r\n        },\r\n      },\r\n\r\n      {\r\n        headerName: \"Full Name\",\r\n        field: \"fullname\",\r\n        filter: true,\r\n        width: 150,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div>\r\n              <span>manoj</span>\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n\r\n      {\r\n        headerName: \"Email ID\",\r\n        field: \"email\t\",\r\n        filter: true,\r\n        width: 150,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div className=\"d-flex align-items-center cursor-pointer\">\r\n              <span>manoj@gmail.com</span>\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n      {\r\n        headerName: \"Phone Number\",\r\n        field: \"mobile\",\r\n        filter: true,\r\n        width: 150,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div className=\"d-flex align-items-center cursor-pointer\">\r\n              <span>8520147863</span>\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n      // {\r\n      //   headerName: \"DOB\",\r\n      //   field: \"dob\t\",\r\n      //   filter: true,\r\n      //   width: 150,\r\n      //   cellRendererFramework: (params) => {\r\n      //     return (\r\n      //       <div className=\"d-flex align-items-center cursor-pointer\">\r\n      //         <span>{params.data.email}</span>\r\n      //       </div>\r\n      //     );\r\n      //   },\r\n      // },\r\n\r\n      {\r\n        headerName: \"Schedule\",\r\n        field: \"fullname\",\r\n        filter: true,\r\n        width: 150,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div>\r\n              <span>14-04-2024</span>\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n      {\r\n        headerName: \"Consulting\",\r\n        field: \"fullname\",\r\n        filter: true,\r\n        width: 150,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div>\r\n              <span>10-04-2024</span>\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n      {\r\n        headerName: \"VIP Schedule\",\r\n        field: \"fullname\",\r\n        filter: true,\r\n        width: 150,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div>\r\n              <span>13-04-2024</span>\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n      {\r\n        headerName: \"VIP Consulting\",\r\n        field: \"fullname\",\r\n        filter: true,\r\n        width: 150,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div>\r\n              <span>12-04-2024</span>\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n      {\r\n        headerName: \"VIP Consulting Fees\",\r\n        field: \"fullname\",\r\n        filter: true,\r\n        width: 180,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div>\r\n              <span>2000</span>\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n      {\r\n        headerName: \"Physical Visit Fees\",\r\n        field: \"fullname\",\r\n        filter: true,\r\n        width: 150,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div>\r\n              <span>2500</span>\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n      {\r\n        headerName: \"Date\",\r\n        field: \"dateofregister\",\r\n        filter: true,\r\n        width: 150,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div>\r\n              <span>10-04-2025</span>\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n\r\n      {\r\n        headerName: \"Status\",\r\n        field: \"dateofregister\",\r\n        filter: true,\r\n        width: 150,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div>\r\n              <Badge style={{color: \"Black\",backgroundColor:\"yellow\",}}>\r\n              <span>Active</span>\r\n              </Badge>\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n\r\n      {\r\n        headerName: \"Actions\",\r\n        field: \"sortorder\",\r\n        width: 150,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div className=\"actions cursor-pointer\">\r\n              <Route\r\n                render={({ history }) => (\r\n                  <Eye\r\n                    className=\"mr-50\"\r\n                    size=\"25px\"\r\n                    color=\"green\"\r\n                    onClick={() =>\r\n                      history.push(`/doctor/Viewdoctor/${params.data._id}`)\r\n                    }\r\n                  />\r\n                )}\r\n              />\r\n              <Route\r\n                render={({ history }) => (\r\n                  <Edit\r\n                    className=\"mr-50\"\r\n                    size=\"25px\"\r\n                    color=\"blue\"\r\n                    onClick={() =>\r\n                      history.push(`/doctor/Editdoctor/${params.data._id}`)\r\n                    }\r\n                  />\r\n                )}\r\n              />\r\n              <Trash2\r\n                className=\"mr-50\"\r\n                size=\"25px\"\r\n                color=\"red\"\r\n                onClick={() => {\r\n                  // let selectedData = this.gridApi.getSelectedRows();\r\n                  // this.runthisfunction(params.data._id);\r\n                  // this.gridApi.updateRowData({ remove: selectedData });\r\n                }}\r\n              />\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n    ],\r\n  };\r\n\r\n  async componentDidMount() {\r\n    await axiosConfig.get(`admin/allAstro`).then((response) => {\r\n      let rowData = response.data.data;\r\n      console.log(rowData);\r\n      this.setState({ rowData });\r\n    });\r\n  }\r\n\r\n  async runthisfunction(id) {\r\n    swal(\r\n      `Sure You Want To Delete It`,\r\n      \"Delete Or Cancel\",\r\n\r\n      {\r\n        buttons: {\r\n          cancel: \"Cancel\",\r\n          catch: { text: \"Delete \", value: \"delete\" },\r\n        },\r\n      }\r\n    ).then((value) => {\r\n      switch (value) {\r\n        case \"delete\":\r\n          axiosConfig.get(`/admin/dltuser/${id}`).then(\r\n            (response) => {\r\n              this.componentDidMount();\r\n              console.log(response);\r\n            },\r\n            (error) => {\r\n              console.log(error);\r\n            }\r\n          );\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    });\r\n  }\r\n  onGridReady = (params) => {\r\n    this.gridApi = params.api;\r\n    this.gridColumnApi = params.columnApi;\r\n    this.setState({\r\n      currenPageSize: this.gridApi.paginationGetCurrentPage() + 1,\r\n      getPageSize: this.gridApi.paginationGetPageSize(),\r\n      totalPages: this.gridApi.paginationGetTotalPages(),\r\n    });\r\n  };\r\n  updateSearchQuery = (val) => {\r\n    this.gridApi.setQuickFilter(val);\r\n  };\r\n  filterSize = (val) => {\r\n    if (this.gridApi) {\r\n      this.gridApi.paginationSetPageSize(Number(val));\r\n      this.setState({\r\n        currenPageSize: val,\r\n        getPageSize: val,\r\n      });\r\n    }\r\n  };\r\n  render() {\r\n    const { rowData, columnDefs, defaultColDef } = this.state;\r\n    return (\r\n      console.log(rowData),\r\n      (\r\n        <div>\r\n          {/* <Breadcrumbs\r\n            breadCrumbTitle=\"User List\"\r\n            breadCrumbParent=\"Doctor\"\r\n            // breadCrumbActive=\" Users List\"\r\n          /> */}\r\n\r\n          <Row className=\"app-user-list\">\r\n            <Col sm=\"12\"></Col>\r\n            <Col sm=\"12\">\r\n              <Card>\r\n                <Row className=\"m-2\">\r\n                  <Col>\r\n                    <h1 sm=\"6\" className=\"float-left\">\r\n                    Doctor's List\r\n                    </h1>\r\n                  </Col>\r\n                  {/* <Col>\r\n                    <Route\r\n                      render={({ history }) => (\r\n                        <Button\r\n                          className=\" btn btn-success float-right\"\r\n                          onClick={() => history.push(\"/app/user/addUser\")}\r\n                        >\r\n                          Add User\r\n                        </Button>\r\n                      )}\r\n                    />\r\n                  </Col> */}\r\n                </Row>\r\n                <CardBody>\r\n                  {this.state.rowData === null ? null : (\r\n                    <div className=\"ag-theme-material w-100 my-2 ag-grid-table\">\r\n                      <div className=\"d-flex flex-wrap justify-content-between align-items-center\">\r\n                        <div className=\"mb-1\">\r\n                          <UncontrolledDropdown className=\"p-1 ag-dropdown\">\r\n                            <DropdownToggle tag=\"div\">\r\n                              {this.gridApi\r\n                                ? this.state.currenPageSize\r\n                                : \"\" * this.state.getPageSize -\r\n                                  (this.state.getPageSize - 1)}{\" \"}\r\n                              -{\" \"}\r\n                              {this.state.rowData.length -\r\n                                this.state.currenPageSize *\r\n                                  this.state.getPageSize >\r\n                              0\r\n                                ? this.state.currenPageSize *\r\n                                  this.state.getPageSize\r\n                                : this.state.rowData.length}{\" \"}\r\n                              of {this.state.rowData.length}\r\n                              <ChevronDown className=\"ml-50\" size={15} />\r\n                            </DropdownToggle>\r\n                            <DropdownMenu right>\r\n                              <DropdownItem\r\n                                tag=\"div\"\r\n                                onClick={() => this.filterSize(20)}\r\n                              >\r\n                                20\r\n                              </DropdownItem>\r\n                              <DropdownItem\r\n                                tag=\"div\"\r\n                                onClick={() => this.filterSize(50)}\r\n                              >\r\n                                50\r\n                              </DropdownItem>\r\n                              <DropdownItem\r\n                                tag=\"div\"\r\n                                onClick={() => this.filterSize(100)}\r\n                              >\r\n                                100\r\n                              </DropdownItem>\r\n                              <DropdownItem\r\n                                tag=\"div\"\r\n                                onClick={() => this.filterSize(134)}\r\n                              >\r\n                                134\r\n                              </DropdownItem>\r\n                            </DropdownMenu>\r\n                          </UncontrolledDropdown>\r\n                        </div>\r\n                        <div className=\"d-flex flex-wrap justify-content-between mb-1\">\r\n                          <div className=\"table-input mr-1\">\r\n                            <Input\r\n                              placeholder=\"search...\"\r\n                              onChange={(e) =>\r\n                                this.updateSearchQuery(e.target.value)\r\n                              }\r\n                              value={this.state.value}\r\n                            />\r\n                          </div>\r\n                          <div className=\"export-btn\">\r\n                            <Button.Ripple\r\n                              color=\"primary\"\r\n                              onClick={() => this.gridApi.exportDataAsCsv()}\r\n                            >\r\n                              Export as CSV\r\n                            </Button.Ripple>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      <ContextLayout.Consumer>\r\n                        {(context) => (\r\n                          <AgGridReact\r\n                            gridOptions={{}}\r\n                            rowSelection=\"multiple\"\r\n                            defaultColDef={defaultColDef}\r\n                            columnDefs={columnDefs}\r\n                            rowData={rowData}\r\n                            onGridReady={this.onGridReady}\r\n                            colResizeDefault={\"shift\"}\r\n                            animateRows={true}\r\n                            floatingFilter={false}\r\n                            pagination={true}\r\n                            paginationPageSize={this.state.paginationPageSize}\r\n                            pivotPanelShow=\"always\"\r\n                            enableRtl={context.state.direction === \"rtl\"}\r\n                          />\r\n                        )}\r\n                      </ContextLayout.Consumer>\r\n                    </div>\r\n                  )}\r\n                </CardBody>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n      )\r\n    );\r\n  }\r\n}\r\nexport default DoctorList;\r\n\r\n"],"sourceRoot":""}