{"version":3,"sources":["views/apps/pagesetup/termscondition/AddTermsCondition.js"],"names":["AddTermsCondition","props","uploadImageCallBack","file","Promise","resolve","reject","xhr","XMLHttpRequest","open","setRequestHeader","data","FormData","append","send","addEventListener","response","JSON","parse","responseText","error","onEditorStateChange","editorState","setState","desc","draftToHtml","convertToRaw","getCurrentContent","submitHandler","e","preventDefault","axiosConfig","post","state","then","console","log","history","push","swal","catch","EditorState","createEmpty","className","render","color","onClick","onSubmit","this","lg","md","sm","wrapperClassName","editorClassName","toolbar","inline","inDropdown","list","textAlign","link","image","uploadCallback","previewImage","alt","present","mandatory","React","Component"],"mappings":"6XAcMA,EAAiB,kDACrB,WAAYC,GAAQ,IAAD,EAKf,OALe,qBACjB,cAAMA,IAORC,oBAAsB,SAACC,GACrB,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAM,IAAIC,eAChBD,EAAIE,KAAK,OAAQ,iCACjBF,EAAIG,iBAAiB,gBAAiB,6BACtC,IAAMC,EAAO,IAAIC,SACjBD,EAAKE,OAAO,QAASV,GACrBI,EAAIO,KAAKH,GACTJ,EAAIQ,iBAAiB,QAAQ,WAC3B,IAAMC,EAAWC,KAAKC,MAAMX,EAAIY,cAChCd,EAAQW,MAEVT,EAAIQ,iBAAiB,SAAS,WAC5B,IAAMK,EAAQH,KAAKC,MAAMX,EAAIY,cAC7Bb,EAAOc,UAGX,EAEFC,oBAAsB,SAACC,GACrB,EAAKC,SAAS,CACZD,cACAE,KAAMC,IAAYC,uBAAaJ,EAAYK,yBAE7C,EAEFC,cAAgB,SAACC,GACfA,EAAEC,iBAEFC,IACGC,KAAK,uBAAwB,EAAKC,OAClCC,MAAK,SAAClB,GACLmB,QAAQC,IAAIpB,GACZ,EAAKf,MAAMoC,QAAQC,KACjB,mDAGFC,IAAK,YAAa,0BAA2B,cAE9CC,OAAM,SAACpB,GACNe,QAAQC,IAAIhB,OA9ChB,EAAKa,MAAQ,CACXT,KAAM,GACNF,YAAamB,cAAYC,eACzB,EA0GH,OAzGA,mCAgDD,WACE,OACE,kBAAC,IAAI,KACH,kBAAC,IAAG,CAACC,UAAU,OACb,kBAAC,IAAG,KACF,wBAAIA,UAAU,cAAY,2BAI5B,kBAAC,IAAG,KACJ,kBAAC,IAAK,CACAC,OAAQ,gBAAGP,EAAO,EAAPA,QAAO,OAChB,kBAAC,IAAM,CACPQ,MAAM,SACJF,UAAU,+BACVG,QAAS,kBACPT,EAAQC,KACN,qDAEH,aAQb,kBAAC,IAAQ,KACP,kBAAC,IAAI,CAACS,SAAUC,KAAKpB,eACnB,kBAAC,IAAG,CAACqB,GAAG,KAAKC,GAAG,KAAKC,GAAG,KAAKR,UAAU,QACrC,kBAAC,IAAK,qBAEN,6BAEA,kBAAC,SAAM,CACLS,iBAAiB,eACjBC,gBAAgB,cAChBhC,oBAAqB2B,KAAK3B,oBAC1BiC,QAAS,CACPC,OAAQ,CAAEC,YAAY,GACtBC,KAAM,CAAED,YAAY,GACpBE,UAAW,CAAEF,YAAY,GACzBG,KAAM,CAAEH,YAAY,GACpBnB,QAAS,CAAEmB,YAAY,GACvBI,MAAO,CACLC,eAAgBb,KAAK9C,oBACrB4D,cAAc,EACdC,IAAK,CAAEC,SAAS,EAAMC,WAAW,QAKzC,kBAAC,IAAM,CAACpB,MAAM,WAAS,kBAKhC,EAhHoB,CAASqB,IAAMC,WAkHvBnE,a","file":"static/js/234.1499a8cc.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Card, CardBody, Col, Row, Form, Button, Label } from \"reactstrap\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { EditorState, convertToRaw } from \"draft-js\";\r\nimport { Editor } from \"react-draft-wysiwyg\";\r\nimport draftToHtml from \"draftjs-to-html\";\r\nimport \"react-draft-wysiwyg/dist/react-draft-wysiwyg.css\";\r\nimport \"../../../../assets/scss/plugins/extensions/editor.scss\";\r\nimport axiosConfig from \"../../../../axiosConfig\";\r\nimport { history } from \"../../../../history\";\r\nimport swal from \"sweetalert\";\r\nimport { Route } from \"react-router-dom\";\r\n// var htmlParser = require(\"html-parser\");\r\n\r\nclass AddTermsCondition extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      desc: \"\",\r\n      editorState: EditorState.createEmpty(),\r\n    };\r\n  }\r\n\r\n  uploadImageCallBack = (file) => {\r\n    return new Promise((resolve, reject) => {\r\n      const xhr = new XMLHttpRequest();\r\n      xhr.open(\"POST\", \"https://api.imgur.com/3/image\");\r\n      xhr.setRequestHeader(\"Authorization\", \"Client-ID 7e1c3e366d22aa3\");\r\n      const data = new FormData();\r\n      data.append(\"image\", file);\r\n      xhr.send(data);\r\n      xhr.addEventListener(\"load\", () => {\r\n        const response = JSON.parse(xhr.responseText);\r\n        resolve(response);\r\n      });\r\n      xhr.addEventListener(\"error\", () => {\r\n        const error = JSON.parse(xhr.responseText);\r\n        reject(error);\r\n      });\r\n    });\r\n  };\r\n\r\n  onEditorStateChange = (editorState) => {\r\n    this.setState({\r\n      editorState,\r\n      desc: draftToHtml(convertToRaw(editorState.getCurrentContent())),\r\n    });\r\n  };\r\n\r\n  submitHandler = (e) => {\r\n    e.preventDefault();\r\n\r\n    axiosConfig\r\n      .post(\"/admin/add_term_cond\", this.state)\r\n      .then((response) => {\r\n        console.log(response);\r\n        this.props.history.push(\r\n          \"/app/pagesetup/termscondition/termConditionList\"\r\n        );\r\n        // alert(\"Privacy Policy Added Successfully !\");\r\n        swal(\"Good job!\", \"You clicked the button!\", \"success\");\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n\r\n    // this.state.editorState.getCurrentContent().getPlainText();\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Card>\r\n        <Row className=\"m-2\">\r\n          <Col>\r\n            <h1 className=\"float-left\">\r\n              Add Term And Condition\r\n            </h1>\r\n          </Col>\r\n          <Col>\r\n          <Route\r\n                render={({ history }) => (\r\n                  <Button\r\n                  color=\"danger\"\r\n                    className=\" btn btn-success float-right\"\r\n                    onClick={() =>\r\n                      history.push(\r\n                        \"/app/pagesetup/termscondition/termConditionList\"\r\n                      )\r\n                    }\r\n                  >\r\n                    Back\r\n                  </Button>\r\n                )}\r\n              />\r\n          </Col>\r\n        </Row>\r\n        <CardBody>\r\n          <Form onSubmit={this.submitHandler}>\r\n            <Col lg=\"12\" md=\"12\" sm=\"12\" className=\"mb-2\">\r\n              <Label> Description</Label>\r\n\r\n              <br />\r\n\r\n              <Editor\r\n                wrapperClassName=\"demo-wrapper\"\r\n                editorClassName=\"demo-editor\"\r\n                onEditorStateChange={this.onEditorStateChange}\r\n                toolbar={{\r\n                  inline: { inDropdown: true },\r\n                  list: { inDropdown: true },\r\n                  textAlign: { inDropdown: true },\r\n                  link: { inDropdown: true },\r\n                  history: { inDropdown: true },\r\n                  image: {\r\n                    uploadCallback: this.uploadImageCallBack,\r\n                    previewImage: true,\r\n                    alt: { present: true, mandatory: true },\r\n                  },\r\n                }}\r\n              />\r\n            </Col>\r\n            <Button color=\"primary\"> Submit</Button>\r\n          </Form>\r\n        </CardBody>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\nexport default AddTermsCondition;\r\n"],"sourceRoot":""}