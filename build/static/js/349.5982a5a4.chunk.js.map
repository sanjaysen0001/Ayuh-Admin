{"version":3,"sources":["views/apps/productmanager/category/commissionmangement/Drcommissionform.js"],"names":["DrForm","history","useHistory","useState","commissionValue","doctors","selectAllDoctors","data","setData","sm","md","className","color","onClick","goBack","onSubmit","e","preventDefault","console","log","row","for","isMulti","name","options","value","onChange","selectedOptions","Array","isArray","map","option","id","selected","error","required","check","type","checked","target","placeholder","size","offset"],"mappings":"oUAgIeA,UA/GA,WACb,IAAMC,EAAUC,cAEhB,EAAwBC,mBAAS,CAC/BC,gBAAiB,GACjBC,QAAS,GACTC,kBAAkB,IAClB,mBAJKC,EAAI,KAAEC,EAAO,KAsCpB,OACE,kBAAC,IAAG,KACF,kBAAC,IAAG,CAACC,GAAG,KAAKC,GAAG,IAAIC,UAAU,WAC5B,kBAAC,IAAI,KACH,kBAAC,IAAU,KACT,wDACA,kBAAC,IAAM,CAACC,MAAM,SAASD,UAAU,OAAOE,QAAS,kBAAMZ,EAAQa,WAAS,SAI1E,kBAAC,IAAQ,KACP,kBAAC,IAAI,CAACC,SA3CK,SAACC,GACpBA,EAAEC,iBAEFC,QAAQC,IAAI,kBAAmBZ,KAyCrB,kBAAC,IAAS,CAACa,KAAG,EAACT,UAAU,sBACvB,kBAAC,IAAK,CAACU,IAAI,kBAAkBZ,GAAI,GAAE,mBAGnC,kBAAC,IAAG,CAACA,GAAI,EAAGE,UAAU,6BACpB,kBAAC,IAAM,CACLW,SAAO,EACPC,KAAK,kBACLC,QAAS,GACTC,MAAOlB,EAAKF,QACZqB,SA3CS,SAACC,GAC1B,GAAIA,GAAmBC,MAAMC,QAAQF,GAAkB,CACrD,IAAMtB,EAAUsB,EAAgBG,KAAI,SAACC,GAAM,MAAM,CAC/CC,GAAID,EAAON,MACXQ,UAAU,MAEZzB,EAAQ,2BAAKD,GAAI,IAAEF,UAASC,kBAAkB,UAE9CY,QAAQgB,MAAM,4CAoCAvB,UAAU,QACVwB,UAAQ,IAEV,yBAAKxB,UAAU,QACb,kBAAC,IAAK,CAACyB,OAAK,GACV,kBAAC,IAAW,CACVC,KAAK,WACLL,GAAG,oBACHM,QAAS/B,EAAKD,iBACdoB,SAzCS,WAC7B,IAAQpB,EAAqBC,EAArBD,iBACRE,EAAQ,2BACHD,GAAI,IACPF,QAA4B,GAC5BC,kBAAmBA,QAqCD,UAMV,kBAAC,IAAS,CAACc,KAAG,GACZ,kBAAC,IAAK,CAACC,IAAI,kBAAkBZ,GAAI,GAAE,qBAGnC,kBAAC,IAAG,CAACA,GAAI,GACP,kBAAC,IAAK,CACJ4B,KAAK,SACLd,KAAK,kBACLS,GAAG,kBACHP,MAAOlB,EAAKH,gBACZsB,SA3EQ,SAACV,GACzB,MAAwBA,EAAEuB,OAAlBhB,EAAI,EAAJA,KAAME,EAAK,EAALA,MACdjB,EAAQ,2BAAKD,GAAI,kBAAGgB,EAAOE,MA0EXe,YAAY,yBACZL,UAAQ,MAId,kBAAC,IAAS,CAACf,KAAG,GACZ,kBAAC,IAAG,CAACX,GAAI,CAAEgC,KAAM,GAAIC,OAAQ,IAC3B,kBAAC,IAAM,CAAC9B,MAAM,UAAUyB,KAAK,UAAQ","file":"static/js/349.5982a5a4.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport Select from 'react-select';\r\nimport {\r\n  Row,\r\n  Col,\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  Form,\r\n  FormGroup,\r\n  Label,\r\n  Input,\r\n  Button,\r\n  CustomInput,\r\n} from 'reactstrap';\r\n\r\nconst DrForm = () => {\r\n  const history = useHistory();\r\n\r\n  const [data, setData] = useState({\r\n    commissionValue: '',\r\n    doctors: [],\r\n    selectAllDoctors: false,\r\n  });\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    // Handle form submission\r\n    console.log('Form submitted:', data);\r\n  };\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setData({ ...data, [name]: value });\r\n  };\r\n\r\n  const handleDoctorSelect = (selectedOptions) => {\r\n    if (selectedOptions && Array.isArray(selectedOptions)) {\r\n      const doctors = selectedOptions.map((option) => ({\r\n        id: option.value,\r\n        selected: true,\r\n      }));\r\n      setData({ ...data, doctors, selectAllDoctors: false });\r\n    } else {\r\n      console.error('Selected options are null or undefined.');\r\n    }\r\n  };\r\n\r\n  const toggleSelectAllDoctors = () => {\r\n    const { selectAllDoctors } = data;\r\n    setData({\r\n      ...data,\r\n      doctors: selectAllDoctors ? [] : [],\r\n      selectAllDoctors: !selectAllDoctors,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Row>\r\n      <Col sm=\"12\" md=\"8\" className=\"mx-auto\">\r\n        <Card>\r\n          <CardHeader>\r\n            <h3>Doctor's Commission Form</h3>\r\n            <Button color=\"danger\" className=\"ml-2\" onClick={() => history.goBack()}>\r\n              Back\r\n            </Button>\r\n          </CardHeader>\r\n          <CardBody>\r\n            <Form onSubmit={handleSubmit}>\r\n              <FormGroup row className=\"align-items-center\">\r\n                <Label for=\"doctorsDropdown\" sm={3}>\r\n                  Choose Doctors:\r\n                </Label>\r\n                <Col sm={6} className=\"d-flex align-items-center\">\r\n                  <Select\r\n                    isMulti\r\n                    name=\"doctorsDropdown\"\r\n                    options={[]}\r\n                    value={data.doctors}\r\n                    onChange={handleDoctorSelect}\r\n                    className=\"w-100\"\r\n                    required\r\n                  />\r\n                  <div className=\"ml-2\">\r\n                    <Label check>\r\n                      <CustomInput\r\n                        type=\"checkbox\"\r\n                        id=\"selectAllCheckbox\"\r\n                        checked={data.selectAllDoctors}\r\n                        onChange={toggleSelectAllDoctors}\r\n                      />\r\n                      All\r\n                    </Label>\r\n                  </div>\r\n                </Col>\r\n              </FormGroup>\r\n              <FormGroup row>\r\n                <Label for=\"commissionValue\" sm={3}>\r\n                  Commission Value:\r\n                </Label>\r\n                <Col sm={6}>\r\n                  <Input\r\n                    type=\"number\"\r\n                    name=\"commissionValue\"\r\n                    id=\"commissionValue\"\r\n                    value={data.commissionValue}\r\n                    onChange={handleInputChange}\r\n                    placeholder=\"Enter commission value\"\r\n                    required\r\n                  />\r\n                </Col>\r\n              </FormGroup>\r\n              <FormGroup row>\r\n                <Col sm={{ size: 10, offset: 3 }}>\r\n                  <Button color=\"primary\" type=\"submit\">\r\n                    Submit\r\n                  </Button>\r\n                </Col>\r\n              </FormGroup>\r\n            </Form>\r\n          </CardBody>\r\n        </Card>\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default DrForm;\r\n"],"sourceRoot":""}