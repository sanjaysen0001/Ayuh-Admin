{"version":3,"sources":["views/apps/productmanager/category/diagnosticmanagement/addtestlistform.js"],"names":["AddTestForm","useState","category","testName","testImage","price","description","diagnosticsCenter","testData","setTestData","history","useHistory","handleInputChange","e","target","name","value","sm","md","size","offset","onClick","goBack","className","onSubmit","preventDefault","console","log","for","type","id","onChange","required","placeholder","imageFile","files","accept","color"],"mappings":"kTAqIeA,UAjIK,WAClB,MAAgCC,mBAAS,CACvCC,SAAU,GACVC,SAAU,GACVC,UAAW,KACXC,MAAO,GACPC,YAAa,GACbC,kBAAmB,KACnB,mBAPKC,EAAQ,KAAEC,EAAW,KAStBC,EAAUC,cAEVC,EAAoB,SAACC,GACzB,MAAwBA,EAAEC,OAAlBC,EAAI,EAAJA,KAAMC,EAAK,EAALA,MACdP,EAAY,2BAAKD,GAAQ,kBAAGO,EAAOC,MAuBrC,OACE,kBAAC,IAAG,KACF,kBAAC,IAAG,CAACC,GAAG,KAAKC,GAAI,CAAEC,KAAM,EAAGC,OAAQ,IAClC,kBAAC,IAAI,KACH,kBAAC,IAAU,KACT,yCACA,kBAAC,IAAM,CAACC,QAAS,kBAAMX,EAAQY,UAAUC,UAAU,8BAA4B,SAEjF,kBAAC,IAAQ,KACP,kBAAC,IAAI,CAACC,SAxBK,SAACX,GACpBA,EAAEY,iBAEFC,QAAQC,IAAInB,GAEZC,EAAY,CACVP,SAAU,GACVC,SAAU,GACVC,UAAW,KACXC,MAAO,GACPC,YAAa,GACbC,kBAAmB,OAcX,kBAAC,IAAS,KACR,kBAAC,IAAK,CAACqB,IAAI,YAAU,oBACrB,kBAAC,IAAK,CACJC,KAAK,SACLd,KAAK,WACLe,GAAG,WACHd,MAAOR,EAASN,SAChB6B,SAAUnB,EACVoB,UAAQ,GAER,4BAAQhB,MAAM,IAAE,qBAIpB,kBAAC,IAAS,KACR,kBAAC,IAAK,CAACY,IAAI,YAAU,cACrB,kBAAC,IAAK,CACJC,KAAK,OACLd,KAAK,WACLe,GAAG,WACHd,MAAOR,EAASL,SAChB4B,SAAUnB,EACVqB,YAAY,kBACZD,UAAQ,KAGZ,kBAAC,IAAS,KACR,kBAAC,IAAK,CAACJ,IAAI,aAAW,eACtB,kBAAC,IAAK,CACJC,KAAK,OACLd,KAAK,YACLe,GAAG,YACHC,SA9DU,SAAClB,GACzB,IAAMqB,EAAYrB,EAAEC,OAAOqB,MAAM,GACjC1B,EAAY,2BAAKD,GAAQ,IAAEJ,UAAW8B,MA6DxBE,OAAO,UACPJ,UAAQ,KAGZ,kBAAC,IAAS,KACR,kBAAC,IAAK,CAACJ,IAAI,qBAAmB,4BAC9B,kBAAC,IAAK,CACJC,KAAK,OACLd,KAAK,oBACLe,GAAG,oBACHd,MAAOR,EAASD,kBAChBwB,SAAUnB,EACVqB,YAAY,gCACZD,UAAQ,KAGZ,kBAAC,IAAS,KACR,kBAAC,IAAK,CAACJ,IAAI,SAAO,UAClB,kBAAC,IAAK,CACJC,KAAK,SACLd,KAAK,QACLe,GAAG,QACHd,MAAOR,EAASH,MAChB0B,SAAUnB,EACVqB,YAAY,cACZD,UAAQ,KAGZ,kBAAC,IAAS,KACR,kBAAC,IAAK,CAACJ,IAAI,eAAa,gBACxB,kBAAC,IAAK,CACJC,KAAK,WACLd,KAAK,cACLe,GAAG,cACHd,MAAOR,EAASF,YAChByB,SAAUnB,EACVqB,YAAY,oBACZD,UAAQ,KAGZ,kBAAC,IAAM,CAACK,MAAM,UAAUR,KAAK,UAAQ","file":"static/js/354.caf8cdc9.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport { Row, Col, Card, CardHeader, CardBody, Form, FormGroup, Label, Input, Button } from \"reactstrap\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst AddTestForm = () => {\r\n  const [testData, setTestData] = useState({\r\n    category: \"\",\r\n    testName: \"\",\r\n    testImage: null,\r\n    price: \"\",\r\n    description: \"\",\r\n    diagnosticsCenter: \"\",\r\n  });\r\n\r\n  const history = useHistory();\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setTestData({ ...testData, [name]: value });\r\n  };\r\n\r\n  const handleImageChange = (e) => {\r\n    const imageFile = e.target.files[0];\r\n    setTestData({ ...testData, testImage: imageFile });\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    // Handle form submission logic here, e.g., send data to backend\r\n    console.log(testData);\r\n    // Reset form fields after submission\r\n    setTestData({\r\n      category: \"\",\r\n      testName: \"\",\r\n      testImage: null,\r\n      price: \"\",\r\n      description: \"\",\r\n      diagnosticsCenter: \"\",\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Row>\r\n      <Col sm=\"12\" md={{ size: 6, offset: 3 }}>\r\n        <Card>\r\n          <CardHeader>\r\n            <h1>Add Test </h1>\r\n            <Button onClick={() => history.goBack()} className=\"btn btn-danger float-right\">Back</Button>\r\n          </CardHeader>\r\n          <CardBody>\r\n            <Form onSubmit={handleSubmit}>\r\n              <FormGroup>\r\n                <Label for=\"category\">Choose Category:</Label>\r\n                <Input\r\n                  type=\"select\"\r\n                  name=\"category\"\r\n                  id=\"category\"\r\n                  value={testData.category}\r\n                  onChange={handleInputChange}\r\n                  required\r\n                >\r\n                  <option value=\"\">Select Category</option>\r\n                  {/* Add options for categories */}\r\n                </Input>\r\n              </FormGroup>\r\n              <FormGroup>\r\n                <Label for=\"testName\">Test Name:</Label>\r\n                <Input\r\n                  type=\"text\"\r\n                  name=\"testName\"\r\n                  id=\"testName\"\r\n                  value={testData.testName}\r\n                  onChange={handleInputChange}\r\n                  placeholder=\"Enter test name\"\r\n                  required\r\n                />\r\n              </FormGroup>\r\n              <FormGroup>\r\n                <Label for=\"testImage\">Test Image:</Label>\r\n                <Input\r\n                  type=\"file\"\r\n                  name=\"testImage\"\r\n                  id=\"testImage\"\r\n                  onChange={handleImageChange}\r\n                  accept=\"image/*\"\r\n                  required\r\n                />\r\n              </FormGroup>\r\n              <FormGroup>\r\n                <Label for=\"diagnosticsCenter\">Diagnostics Center Name:</Label>\r\n                <Input\r\n                  type=\"text\"\r\n                  name=\"diagnosticsCenter\"\r\n                  id=\"diagnosticsCenter\"\r\n                  value={testData.diagnosticsCenter}\r\n                  onChange={handleInputChange}\r\n                  placeholder=\"Enter diagnostics center name\"\r\n                  required\r\n                />\r\n              </FormGroup>\r\n              <FormGroup>\r\n                <Label for=\"price\">Price:</Label>\r\n                <Input\r\n                  type=\"number\"\r\n                  name=\"price\"\r\n                  id=\"price\"\r\n                  value={testData.price}\r\n                  onChange={handleInputChange}\r\n                  placeholder=\"Enter price\"\r\n                  required\r\n                />\r\n              </FormGroup>\r\n              <FormGroup>\r\n                <Label for=\"description\">Description:</Label>\r\n                <Input\r\n                  type=\"textarea\"\r\n                  name=\"description\"\r\n                  id=\"description\"\r\n                  value={testData.description}\r\n                  onChange={handleInputChange}\r\n                  placeholder=\"Enter description\"\r\n                  required\r\n                />\r\n              </FormGroup>\r\n              <Button color=\"primary\" type=\"submit\">Submit</Button>\r\n            </Form>\r\n          </CardBody>\r\n        </Card>\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default AddTestForm;\r\n"],"sourceRoot":""}