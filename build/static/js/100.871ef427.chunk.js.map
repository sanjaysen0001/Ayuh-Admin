{"version":3,"sources":["assets/img/pages/login.png","views/pages/authentication/login/LoginJWT.js","views/pages/authentication/login/Login.js","components/@vuexy/checkbox/CheckboxesVuexy.js"],"names":["module","exports","i","LoginJWT","props","handlechange","e","preventDefault","setState","target","name","value","handleLogin","state","email","password","axiosConfig","post","response","console","log","localStorage","setItem","data","token","JSON","stringify","user","Swal","fire","icon","title","text","confirmButtonColor","confirmButtonText","then","window","location","replace","error","Fragment","CardBody","className","Form","onSubmit","this","FormGroup","Input","type","placeholder","onChange","required","size","Label","color","label","defaultChecked","handleRemember","to","render","history","Button","Ripple","React","Component","connect","values","auth","login","loginWithJWT","Login","activeTab","toggle","tab","Row","Col","sm","xl","lg","md","Card","src","loginImg","alt","CardHeader","CardTitle","Nav","tabs","NavItem","TabContent","TabPane","tabId","CheckBoxesVuexy","checked","disabled","onClick"],"mappings":";wIAAAA,EAAOC,QAAU,IAA0B,mC,gaCC3C,kmGAAAC,GAAA,wBAAAA,EAAA,sBAAAA,GAAA,iBAAAA,GAAA,ssDAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,4bAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,yhBAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,qGAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,sQAWkD,IAC5CC,EAAQ,kDACZ,WAAYC,GAAQ,IAAD,EAMf,OANe,qBACjB,cAAMA,IAORC,aAAe,SAACC,GACdA,EAAEC,iBACF,EAAKC,SAAS,eAAGF,EAAEG,OAAOC,KAAOJ,EAAEG,OAAOE,SAC1C,EAEFC,YAAW,uCAAG,WAAON,GAAC,yEAEG,OADvBA,EAAEC,iBAAiB,EACS,EAAKM,MAApB,EAALC,MAAe,EAARC,SAAQ,kBAGEC,IAAYC,KAAK,eAAgB,CACtDH,MAAO,EAAKD,MAAMC,MAClBC,SAAU,EAAKF,MAAME,WACpB,KAAD,EAHIG,EAAQ,OAIdC,QAAQC,IAAIF,GAEZG,aAAaC,QAAQ,WAAYJ,EAASK,KAAKC,OAC/CH,aAAaC,QAAQ,WAAYG,KAAKC,UAAUR,EAASK,KAAKI,OAE9DC,IAAKC,KAAK,CACRC,KAAM,UACNC,MAAO,WACPC,KAAM,uBACNC,mBAAoB,UACpBC,kBAAmB,OAClBC,MAAK,WACNC,OAAOC,SAASC,QAAQ,QACvB,kDAEHnB,QAAQoB,MAAM,eAAe,EAAD,IAC5BX,IAAKC,KAAK,CACRC,KAAM,QACNC,MAAO,UACPC,KAAM,kDACL,0DAEN,mDA/BU,GAXT,EAAKnB,MAAQ,CACXC,MAAO,GACPC,SAAU,IAEV,EA0GH,OAzGA,mCA8CD,WACE,OACE,kBAAC,IAAMyB,SAAQ,KACb,kBAACC,EAAA,EAAQ,CAACC,UAAU,QAClB,kBAACC,EAAA,EAAI,CAACC,SAAUC,KAAKjC,aACnB,kBAACkC,EAAA,EAAS,CAACJ,UAAU,oDACnB,kBAACK,EAAA,EAAK,CACJC,KAAK,QACLtC,KAAK,QACLuC,YAAY,SACZtC,MAAOkC,KAAKhC,MAAMC,MAClBoC,SAAUL,KAAKxC,aACf8C,UAAQ,IAEV,yBAAKT,UAAU,yBACb,kBAAC,IAAI,CAACU,KAAM,MAEd,kBAACC,EAAA,EAAK,gBAER,kBAACP,EAAA,EAAS,CAACJ,UAAU,oDACnB,kBAACK,EAAA,EAAK,CACJC,KAAK,WACLtC,KAAK,WACLuC,YAAY,WACZtC,MAAOkC,KAAKhC,MAAME,SAClBmC,SAAUL,KAAKxC,aACf8C,UAAQ,IAEV,yBAAKT,UAAU,yBACb,kBAAC,IAAI,CAACU,KAAM,MAEd,kBAACC,EAAA,EAAK,kBAER,kBAACP,EAAA,EAAS,CAACJ,UAAU,qDACnB,kBAAC,IAAQ,CACPY,MAAM,UACNxB,KAAM,kBAAC,IAAK,CAACY,UAAU,UAAUU,KAAM,KACvCG,MAAM,cACNC,gBAAgB,EAChBN,SAAUL,KAAKY,eACfN,UAAQ,IAEV,yBAAKT,UAAU,eACb,kBAAC,IAAI,CAACgB,GAAG,0BAAwB,sBAGrC,yBAAKhB,UAAU,kCACb,kBAAC,IAAK,CACJiB,OAAQ,YAAU,EAAPC,QAAO,OAChB,kBAACC,EAAA,EAAOC,OAAM,CAACR,MAAM,UAAUN,KAAK,UAAQ,oBAU3D,EAjHW,CAASe,IAAMC,WAwHdC,eALS,SAACpD,GACvB,MAAO,CACLqD,OAAQrD,EAAMsD,KAAKC,SAGiB,CAAEC,kBAA3BJ,CAA2C9D,GChHpDmE,EAAK,iKAUP,OAVO,oCACTzD,MAAQ,CACN0D,UAAW,KACX,EACFC,OAAS,SAACC,GACJ,EAAK5D,MAAM0D,YAAcE,GAC3B,EAAKjE,SAAS,CACZ+D,UAAWE,KAGhB,EAiFA,OAjFA,mCACD,WACE,OACE,kBAACC,EAAA,EAAG,CAAChC,UAAU,8BACb,kBAACiC,EAAA,EAAG,CACFC,GAAG,IACHC,GAAG,IACHC,GAAG,KACHC,GAAG,IACHrC,UAAU,iCAEV,kBAACsC,EAAA,EAAI,CAACtC,UAAU,qDACd,kBAACgC,EAAA,EAAG,CAAChC,UAAU,OACb,kBAACiC,EAAA,EAAG,CACFG,GAAG,IACHpC,UAAU,6DAEV,yBAAKuC,IAAKC,IAAUC,IAAI,cAE1B,kBAACR,EAAA,EAAG,CAACG,GAAG,IAAIC,GAAG,KAAKrC,UAAU,OAC5B,kBAACsC,EAAA,EAAI,CAACtC,UAAU,4CACd,kBAAC0C,EAAA,EAAU,CAAC1C,UAAU,QACpB,kBAAC2C,EAAA,EAAS,KACR,wBAAI3C,UAAU,QAAM,WAGxB,uBAAGA,UAAU,mBAAiB,4DAG9B,kBAAC4C,EAAA,EAAG,CAACC,MAAI,EAAC7C,UAAU,QAClB,kBAAC8C,EAAA,EAAO,MAYR,kBAACA,EAAA,EAAO,MAYR,kBAACA,EAAA,EAAO,OAaV,kBAACC,EAAA,EAAU,CAAClB,UAAW1B,KAAKhC,MAAM0D,WAChC,kBAACmB,EAAA,EAAO,CAACC,MAAM,KACb,kBAAC,EAAQ,OAEX,kBAACD,EAAA,EAAO,CAACC,MAAM,MACf,kBAACD,EAAA,EAAO,CAACC,MAAM,iBAShC,EA3FQ,CAAS5B,IAAMC,WA6FXM,a,qFCjHTsB,EAAe,kHA2BlB,OA3BkB,mCACnB,WACE,OACE,yBACElD,UAAS,0BACPG,KAAKzC,MAAMsC,UAAYG,KAAKzC,MAAMsC,UAAY,GAAE,wBAClCG,KAAKzC,MAAMkD,QAE3B,2BACEN,KAAK,WACLQ,eAAgBX,KAAKzC,MAAMoD,eAC3BqC,QAAShD,KAAKzC,MAAMyF,QACpBlF,MAAOkC,KAAKzC,MAAMO,MAClBmF,SAAUjD,KAAKzC,MAAM0F,SACrBC,QAASlD,KAAKzC,MAAM2F,QAAUlD,KAAKzC,MAAM2F,QAAU,KACnD7C,SAAUL,KAAKzC,MAAM8C,SAAWL,KAAKzC,MAAM8C,SAAW,OAExD,0BACER,UAAS,kCACPG,KAAKzC,MAAMgD,KAAOP,KAAKzC,MAAMgD,KAAO,OAGtC,0BAAMV,UAAU,sBAAsBG,KAAKzC,MAAM0B,OAEnD,8BAAOe,KAAKzC,MAAMmD,YAGvB,EA3BkB,CAASQ,IAAMC,WA8BrB4B,O","file":"static/js/100.871ef427.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/login.fd58a052.png\";","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { CardBody, FormGroup, Form, Input, Button, Label } from \"reactstrap\";\r\nimport Checkbox from \"../../../../components/@vuexy/checkbox/CheckboxesVuexy\";\r\nimport { Mail, Lock, Check } from \"react-feather\";\r\nimport { loginWithJWT } from \"../../../../redux/actions/auth/loginActions\";\r\nimport { connect } from \"react-redux\";\r\nimport axios from \"axios\";\r\nimport { Route } from \"react-router-dom\";\r\nimport Swal from \"sweetalert2\";\r\nimport swal from \"sweetalert\";\r\nimport { Token } from \"prismjs\";\r\nimport axiosConfig from \"../../../../axiosConfig\";\r\nclass LoginJWT extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      email: \"\",\r\n      password: \"\",\r\n      // token: \"\",\r\n    };\r\n  }\r\n  handlechange = (e) => {\r\n    e.preventDefault();\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n\r\n  handleLogin = async (e) => {\r\n    e.preventDefault();\r\n    const { email, password } = this.state;\r\n\r\n    try {\r\n      const response = await axiosConfig.post(\"/admin/login\", {\r\n        email: this.state.email,\r\n        password: this.state.password,\r\n      });\r\n      console.log(response);\r\n\r\n      localStorage.setItem(\"ad-token\", response.data.token);\r\n      localStorage.setItem(\"userData\", JSON.stringify(response.data.user));\r\n\r\n      Swal.fire({\r\n        icon: \"success\",\r\n        title: \"Success!\",\r\n        text: \"Log In successfully.\",\r\n        confirmButtonColor: \"#3085d6\",\r\n        confirmButtonText: \"OK\",\r\n      }).then(() => {\r\n        window.location.replace(\"/\");\r\n      });\r\n    } catch (error) {\r\n      console.error(\"Login Error:\", error);\r\n      Swal.fire({\r\n        icon: \"error\",\r\n        title: \"Oops...\",\r\n        text: \"Something went wrong! Please try again later.\",\r\n      });\r\n    }\r\n  };\r\n\r\n  // handleLogin = (e) => {\r\n  //   e.preventDefault();\r\n  //   localStorage.setItem(\"ad-token\", \" response.data.token\");\r\n  //   localStorage.setItem(\"userId\", \"response.data.data._id\");\r\n  //   localStorage.setItem(\"astroId\", \"response.data.data._id\");\r\n  //   window.location.replace(\"/#/\");\r\n  // };\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <CardBody className=\"pt-1\">\r\n          <Form onSubmit={this.handleLogin}>\r\n            <FormGroup className=\"form-label-group position-relative has-icon-left\">\r\n              <Input\r\n                type=\"email\"\r\n                name=\"email\"\r\n                placeholder=\"E-mail\"\r\n                value={this.state.email}\r\n                onChange={this.handlechange}\r\n                required\r\n              />\r\n              <div className=\"form-control-position\">\r\n                <Mail size={15} />\r\n              </div>\r\n              <Label>Email </Label>\r\n            </FormGroup>\r\n            <FormGroup className=\"form-label-group position-relative has-icon-left\">\r\n              <Input\r\n                type=\"password\"\r\n                name=\"password\"\r\n                placeholder=\"Password\"\r\n                value={this.state.password}\r\n                onChange={this.handlechange}\r\n                required\r\n              />\r\n              <div className=\"form-control-position\">\r\n                <Lock size={15} />\r\n              </div>\r\n              <Label>Password</Label>\r\n            </FormGroup>\r\n            <FormGroup className=\"d-flex justify-content-between align-items-center\">\r\n              <Checkbox\r\n                color=\"primary\"\r\n                icon={<Check className=\"vx-icon\" size={16} />}\r\n                label=\"Remember me\"\r\n                defaultChecked={false}\r\n                onChange={this.handleRemember}\r\n                required\r\n              />\r\n              <div className=\"float-right\">\r\n                <Link to=\"/pages/forgot-password\">Forgot Password?</Link>\r\n              </div>\r\n            </FormGroup>\r\n            <div className=\"d-flex justify-content-between\">\r\n              <Route\r\n                render={({ history }) => (\r\n                  <Button.Ripple color=\"primary\" type=\"submit\">\r\n                    Login\r\n                  </Button.Ripple>\r\n                )}\r\n              />\r\n            </div>\r\n          </Form>\r\n        </CardBody>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    values: state.auth.login,\r\n  };\r\n};\r\nexport default connect(mapStateToProps, { loginWithJWT })(LoginJWT);\r\n","import React from \"react\";\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardTitle,\r\n  Row,\r\n  Col,\r\n  Nav,\r\n  NavItem,\r\n  // NavLink,\r\n  TabContent,\r\n  TabPane,\r\n} from \"reactstrap\";\r\n// import classnames from \"classnames\";\r\nimport loginImg from \"../../../../assets/img/pages/login.png\";\r\nimport \"../../../../assets/scss/pages/authentication.scss\";\r\n// import LoginAuth0 from \"./LoginAuth0\";\r\n// import LoginFirebase from \"./LoginFirebase\";\r\nimport LoginJWT from \"./LoginJWT\";\r\n\r\n\r\nclass Login extends React.Component {\r\n  state = {\r\n    activeTab: \"1\",\r\n  };\r\n  toggle = (tab) => {\r\n    if (this.state.activeTab !== tab) {\r\n      this.setState({\r\n        activeTab: tab,\r\n      });\r\n    }\r\n  };\r\n  render() {\r\n    return (\r\n      <Row className=\"m-0 justify-content-center\">\r\n        <Col\r\n          sm=\"8\"\r\n          xl=\"7\"\r\n          lg=\"10\"\r\n          md=\"8\"\r\n          className=\"d-flex justify-content-center\"\r\n        >\r\n          <Card className=\"bg-authentication login-card rounded-0 mb-0 w-100\">\r\n            <Row className=\"m-0\">\r\n              <Col\r\n                lg=\"6\"\r\n                className=\"d-lg-block d-none text-center align-self-center px-1 py-0\"\r\n              >\r\n                <img src={loginImg} alt=\"loginImg\" />\r\n              </Col>\r\n              <Col lg=\"6\" md=\"12\" className=\"p-0\">\r\n                <Card className=\"rounded-0 mb-0 px-2 login-tabs-container\">\r\n                  <CardHeader className=\"pb-1\">\r\n                    <CardTitle>\r\n                      <h4 className=\"mb-0\">Login</h4>\r\n                    </CardTitle>\r\n                  </CardHeader>\r\n                  <p className=\"px-2 auth-title\">\r\n                    Welcome back, please login to your Doctor-Admin account.\r\n                  </p>\r\n                  <Nav tabs className=\"px-2\">\r\n                    <NavItem>\r\n                      {/* <NavLink\r\n                        className={classnames({\r\n                          active: this.state.activeTab === \"1\",\r\n                        })}\r\n                        onClick={() => {\r\n                          this.toggle(\"1\");\r\n                        }}\r\n                      >\r\n                        JWT\r\n                      </NavLink> */}\r\n                    </NavItem>\r\n                    <NavItem>\r\n                      {/* <NavLink\r\n                        className={classnames({\r\n                          active: this.state.activeTab === \"2\",\r\n                        })}\r\n                        onClick={() => {\r\n                          this.toggle(\"2\");\r\n                        }}\r\n                      >\r\n                        Firebase\r\n                      </NavLink> */}\r\n                    </NavItem>\r\n                    <NavItem>\r\n                      {/* <NavLink\r\n                        className={classnames({\r\n                          active: this.state.activeTab === \"3\",\r\n                        })}\r\n                        onClick={() => {\r\n                          this.toggle(\"3\");\r\n                        }}\r\n                      >\r\n                        Auth0\r\n                      </NavLink> */}\r\n                    </NavItem>\r\n                  </Nav>\r\n                  <TabContent activeTab={this.state.activeTab}>\r\n                    <TabPane tabId=\"1\">\r\n                      <LoginJWT />\r\n                    </TabPane>\r\n                    <TabPane tabId=\"2\">{/* <LoginFirebase /> */}</TabPane>\r\n                    <TabPane tabId=\"3\">{/* <LoginAuth0 /> */}</TabPane>\r\n                  </TabContent>\r\n                </Card>\r\n              </Col>\r\n            </Row>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    );\r\n  }\r\n}\r\nexport default Login;\r\n","import React from \"react\"\r\nclass CheckBoxesVuexy extends React.Component {\r\n  render() {\r\n    return (\r\n      <div\r\n        className={`vx-checkbox-con ${\r\n          this.props.className ? this.props.className : \"\"\r\n        } vx-checkbox-${this.props.color}`}\r\n      >\r\n        <input\r\n          type=\"checkbox\"\r\n          defaultChecked={this.props.defaultChecked}\r\n          checked={this.props.checked}\r\n          value={this.props.value}\r\n          disabled={this.props.disabled}\r\n          onClick={this.props.onClick ? this.props.onClick : null}\r\n          onChange={this.props.onChange ? this.props.onChange : null}\r\n        />\r\n        <span\r\n          className={`vx-checkbox vx-checkbox-${\r\n            this.props.size ? this.props.size : \"md\"\r\n          }`}\r\n        >\r\n          <span className=\"vx-checkbox--check\">{this.props.icon}</span>\r\n        </span>\r\n        <span>{this.props.label}</span>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default CheckBoxesVuexy\r\n"],"sourceRoot":""}