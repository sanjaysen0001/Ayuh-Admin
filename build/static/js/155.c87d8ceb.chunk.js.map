{"version":3,"sources":["views/apps/productmanager/product/supplierinvoicelist.js"],"names":["i","Invoicepharma","state","rowData","paginationPageSize","currenPageSize","getPageSize","defaultColDef","sortable","editable","resizable","suppressMenu","columnDefs","headerName","valueGetter","field","width","filter","cellRendererFramework","params","className","data","category","name","price","ReactHtmlParser","desc","console","log","limit","value","status","render","history","size","color","onClick","push","_id","selectedData","gridApi","getSelectedRows","runthisfunction","updateRowData","remove","onGridReady","api","gridColumnApi","columnApi","setState","paginationGetCurrentPage","paginationGetPageSize","totalPages","paginationGetTotalPages","updateSearchQuery","val","setQuickFilter","filterSize","paginationSetPageSize","Number","axiosConfig","get","then","response","id","error","this","sm","tag","length","right","placeholder","onChange","e","target","Ripple","exportDataAsCsv","Consumer","context","gridOptions","rowSelection","colResizeDefault","animateRows","floatingFilter","pagination","pivotPanelShow","enableRtl","direction","React","Component"],"mappings":"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","file":"static/js/155.c87d8ceb.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Input,\r\n  Row,\r\n  Col,\r\n  CustomInput,\r\n  Button,\r\n  UncontrolledDropdown,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  DropdownToggle,\r\n} from \"reactstrap\";\r\nimport axiosConfig from \"../../../../axiosConfig\";\r\nimport ReactHtmlParser from \"react-html-parser\";\r\nimport { ContextLayout } from \"../../../../utility/context/Layout\";\r\nimport { AgGridReact } from \"ag-grid-react\";\r\nimport { Eye, Edit, Trash2, ChevronDown, Download } from \"react-feather\";\r\n//import classnames from \"classnames\";\r\nimport \"../../../../assets/scss/plugins/tables/_agGridStyleOverride.scss\";\r\nimport \"../../../../assets/scss/pages/users.scss\";\r\nimport { Route } from \"react-router-dom\";\r\nimport Breadcrumbs from \"../../../../components/@vuexy/breadCrumbs/BreadCrumb\";\r\n\r\nclass Invoicepharma extends React.Component {\r\n  state = {\r\n    rowData: [],\r\n    paginationPageSize: 20,\r\n    currenPageSize: \"\",\r\n    getPageSize: \"\",\r\n    defaultColDef: {\r\n      sortable: true,\r\n      editable: true,\r\n      resizable: true,\r\n      suppressMenu: true,\r\n    },\r\n    columnDefs: [\r\n      {\r\n        headerName: \"S.No\",\r\n        valueGetter: \"node.rowIndex + 1\",\r\n        field: \"node.rowIndex + 1\",\r\n        width: 100,\r\n        filter: true,\r\n        // checkboxSelection: true,\r\n        // headerCheckboxSelectionFilteredOnly: true,\r\n        // headerCheckboxSelection: true,\r\n      },\r\n\r\n      // {\r\n      //   headerName: \"SI\",\r\n      //   field: \"productname\",\r\n      //   filter: true,\r\n      //   width: 150,\r\n      //   cellRendererFramework: (params) => {\r\n      //     return (\r\n      //       <div>\r\n      //         <span>{params.data.productname}</span>\r\n      //       </div>\r\n      //     );\r\n      //   },\r\n      // },\r\n\r\n      //   {\r\n      //     headerName: \"Image\",\r\n      //     field: \"image\",\r\n      //     filter: false,\r\n      //     width: 120,\r\n      //     setColumnVisible: false,\r\n      //     cellRendererFramework: (params) => {\r\n      //       return (\r\n      //         <div className=\"d-flex align-items-center cursor-pointer\">\r\n      //           {params.data.image.map((i) => (\r\n      //             <img\r\n      //               className=\" rounded-circle  mr-3\"\r\n      //               src={i}\r\n      //               alt=\"user avatar\"\r\n      //               height=\"40\"\r\n      //               width=\"40\"\r\n      //             />\r\n      //           ))}\r\n      //         </div>\r\n      //       );\r\n      //     },\r\n      //   },\r\n\r\n      {\r\n        headerName: \"Invoice.No\",\r\n        field: \"quantity\",\r\n        filter: true,\r\n        width: 150,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div className=\"d-flex align-items-center cursor-pointer\">\r\n              <span>{params.data.category?.name}</span>\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n      {\r\n        headerName: \"Patient ID\",\r\n        field: \"price\",\r\n        filter: true,\r\n        width: 150,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div>\r\n              <span>{params.data.price}</span>\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n      {\r\n        headerName: \"Pharma Name\",\r\n        field: \"desc\",\r\n        filter: true,\r\n        width: 180,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div>\r\n              <span>{ReactHtmlParser(params.data.desc)}</span>\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n      {\r\n        headerName: \"Date\",\r\n        field: \"orderdate\",\r\n        filter: true,\r\n        width: 120,\r\n        cellRendererFramework: (params) => {\r\n          console.log(params);\r\n          return (\r\n            <div>\r\n              <span>{params.data?.limit}</span>\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n      {\r\n        headerName: \"Total Amount\",\r\n        field: \"status\",\r\n        filter: true,\r\n        width: 160,\r\n        cellRendererFramework: (params) => {\r\n          console.log(params);\r\n          return (\r\n            <div>\r\n              <span>{params.data?.price}</span>\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n\r\n      {\r\n        headerName: \"Status\",\r\n        field: \"status\",\r\n        filter: true,\r\n        width: 150,\r\n        cellRendererFramework: (params) => {\r\n          return params.value === \"Active\" ? (\r\n            <div className=\"badge badge-pill badge-success\">\r\n              {params.data.status}\r\n            </div>\r\n          ) : params.value === \"Deactive\" ? (\r\n            <div className=\"badge badge-pill badge-warning\">\r\n              {params.data.status}\r\n            </div>\r\n          ) : null;\r\n        },\r\n      },\r\n\r\n      {\r\n        headerName: \"Action\",\r\n        field: \"sortorder\",\r\n        width: 150,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div className=\"actions cursor-pointer\">\r\n              <Route\r\n                render={({ history }) => (\r\n                  <Download\r\n                    className=\"mr-50\"\r\n                    size=\"25px\"\r\n                    color=\"green\"\r\n                    onClick={() =>\r\n                      history.push(\r\n                        `/pages/invoice${params.data._id}`\r\n                      )\r\n                    }\r\n                  />\r\n                )}\r\n              />\r\n              {/* <Route\r\n                render={({ history }) => (\r\n                  <Edit\r\n                    className=\"mr-50\"\r\n                    size=\"25px\"\r\n                    color=\"blue\"\r\n                    onClick={() =>\r\n                      history.push(\r\n                        `/app/productmanager/product/editProduct/${params.data._id}`\r\n                      )\r\n                    }\r\n                  />\r\n                )}\r\n              /> */}\r\n              <Trash2\r\n                className=\"mr-50\"\r\n                size=\"25px\"\r\n                color=\"red\"\r\n                onClick={() => {\r\n                  let selectedData = this.gridApi.getSelectedRows();\r\n                  this.runthisfunction(params.data._id);\r\n                  this.gridApi.updateRowData({ remove: selectedData });\r\n                }}\r\n              />\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n    ],\r\n  };\r\n  async componentDidMount() {\r\n    // let { id } = this.props.match.params;\r\n\r\n    await axiosConfig.get(`/admin/getProduct`).then((response) => {\r\n      let rowData = response.data.data;\r\n      console.log(rowData);\r\n      this.setState({ rowData });\r\n    });\r\n  }\r\n\r\n  async runthisfunction(id) {\r\n    console.log(id);\r\n    await axiosConfig.get(`/admin/delproduct/${id}`).then(\r\n      (response) => {\r\n        console.log(response);\r\n      },\r\n      (error) => {\r\n        console.log(error);\r\n      }\r\n    );\r\n  }\r\n  onGridReady = (params) => {\r\n    this.gridApi = params.api;\r\n    this.gridColumnApi = params.columnApi;\r\n    this.setState({\r\n      currenPageSize: this.gridApi.paginationGetCurrentPage() + 1,\r\n      getPageSize: this.gridApi.paginationGetPageSize(),\r\n      totalPages: this.gridApi.paginationGetTotalPages(),\r\n    });\r\n  };\r\n  updateSearchQuery = (val) => {\r\n    this.gridApi.setQuickFilter(val);\r\n  };\r\n  filterSize = (val) => {\r\n    if (this.gridApi) {\r\n      this.gridApi.paginationSetPageSize(Number(val));\r\n      this.setState({\r\n        currenPageSize: val,\r\n        getPageSize: val,\r\n      });\r\n    }\r\n  };\r\n  render() {\r\n    const { rowData, columnDefs, defaultColDef } = this.state;\r\n    return (\r\n      console.log(rowData),\r\n      (\r\n        <div>\r\n          {/* <Breadcrumbs\r\n            breadCrumbTitle=\"Pharma Management\"\r\n            breadCrumbParent=\"Order List\"\r\n          /> */}\r\n\r\n          <Row className=\"app-user-list\">\r\n            <Col sm=\"12\"></Col>\r\n            <Col sm=\"12\">\r\n              <Card>\r\n                <Row className=\"m-2\">\r\n                  <Col>\r\n                    <h1 sm=\"6\" className=\"float-left\">\r\n                      Supplier Invoice List\r\n                    </h1>\r\n                  </Col>\r\n                  <Col>\r\n                    {/* <Route\r\n                      render={({ history }) => (\r\n                        <Button\r\n                          className=\" btn btn-success float-right\"\r\n                          onClick={() =>\r\n                            history.push(\r\n                              \"/app/productmanager/product/addProduct\"\r\n                            )\r\n                          }\r\n                        >\r\n                          Add\r\n                        </Button>\r\n                      )}\r\n                    /> */}\r\n                  </Col>\r\n                </Row>\r\n                <CardBody>\r\n                  {this.state.rowData === null ? null : (\r\n                    <div className=\"ag-theme-material w-100 my-2 ag-grid-table\">\r\n                      <div className=\"d-flex flex-wrap justify-content-between align-items-center\">\r\n                        <div className=\"mb-1\">\r\n                          <UncontrolledDropdown className=\"p-1 ag-dropdown\">\r\n                            <DropdownToggle tag=\"div\">\r\n                              {this.gridApi\r\n                                ? this.state.currenPageSize\r\n                                : \"\" * this.state.getPageSize -\r\n                                (this.state.getPageSize - 1)}{\" \"}\r\n                              -{\" \"}\r\n                              {this.state.rowData.length -\r\n                                this.state.currenPageSize *\r\n                                this.state.getPageSize >\r\n                                0\r\n                                ? this.state.currenPageSize *\r\n                                this.state.getPageSize\r\n                                : this.state.rowData.length}{\" \"}\r\n                              of {this.state.rowData.length}\r\n                              <ChevronDown className=\"ml-50\" size={15} />\r\n                            </DropdownToggle>\r\n                            <DropdownMenu right>\r\n                              <DropdownItem\r\n                                tag=\"div\"\r\n                                onClick={() => this.filterSize(20)}\r\n                              >\r\n                                20\r\n                              </DropdownItem>\r\n                              <DropdownItem\r\n                                tag=\"div\"\r\n                                onClick={() => this.filterSize(50)}\r\n                              >\r\n                                50\r\n                              </DropdownItem>\r\n                              <DropdownItem\r\n                                tag=\"div\"\r\n                                onClick={() => this.filterSize(100)}\r\n                              >\r\n                                100\r\n                              </DropdownItem>\r\n                              <DropdownItem\r\n                                tag=\"div\"\r\n                                onClick={() => this.filterSize(134)}\r\n                              >\r\n                                134\r\n                              </DropdownItem>\r\n                            </DropdownMenu>\r\n                          </UncontrolledDropdown>\r\n                        </div>\r\n                        <div className=\"d-flex flex-wrap justify-content-between mb-1\">\r\n                          <div className=\"table-input mr-1\">\r\n                            <Input\r\n                              placeholder=\"search...\"\r\n                              onChange={(e) =>\r\n                                this.updateSearchQuery(e.target.value)\r\n                              }\r\n                              value={this.state.value}\r\n                            />\r\n                          </div>\r\n                          <div className=\"export-btn\">\r\n                            <Button.Ripple\r\n                              color=\"primary\"\r\n                              onClick={() => this.gridApi.exportDataAsCsv()}\r\n                            >\r\n                              Export as CSV\r\n                            </Button.Ripple>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      <ContextLayout.Consumer>\r\n                        {(context) => (\r\n                          <AgGridReact\r\n                            gridOptions={{}}\r\n                            rowSelection=\"multiple\"\r\n                            defaultColDef={defaultColDef}\r\n                            columnDefs={columnDefs}\r\n                            rowData={rowData}\r\n                            onGridReady={this.onGridReady}\r\n                            colResizeDefault={\"shift\"}\r\n                            animateRows={true}\r\n                            floatingFilter={false}\r\n                            pagination={true}\r\n                            paginationPageSize={this.state.paginationPageSize}\r\n                            pivotPanelShow=\"always\"\r\n                            enableRtl={context.state.direction === \"rtl\"}\r\n                          />\r\n                        )}\r\n                      </ContextLayout.Consumer>\r\n                    </div>\r\n                  )}\r\n                </CardBody>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n      )\r\n    );\r\n  }\r\n}\r\nexport default Invoicepharma;\r\n"],"sourceRoot":""}