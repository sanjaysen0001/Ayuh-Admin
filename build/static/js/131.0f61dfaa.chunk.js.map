{"version":3,"sources":["views/apps/doctor/EditDoctor.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js"],"names":["EditDoctor","props","handleChange","e","target","name","value","console","log","setState","handleSubmit","preventDefault","data","FormData","append","state","fullname","email","fromTime","toTime","ratePerMin","physicianVisitFees","days","mobile","dob","image","values","keys","key","id","match","params","axiosConfig","put","then","response","swal","componentDidMount","catch","error","handlePicture","files","mobileNumber","date","consulting","consultingFeesCharge","this","get","Fragment","sm","listTag","href","tag","active","className","col-sm-6","render","history","onClick","goBack","onSubmit","md","type","onChange","React","Component","_createForOfIteratorHelper","o","Symbol","iterator","Array","isArray","i","F","s","n","length","done","_e","f","TypeError","it","err","normalCompletion","didErr","step","next","_e2"],"mappings":"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","file":"static/js/131.0f61dfaa.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Row,\r\n  Col,\r\n  Button,\r\n  Breadcrumb,\r\n  BreadcrumbItem,\r\n  Input,\r\n  Form,\r\n} from \"reactstrap\";\r\nimport \"../../../assets/scss/pages/app-ecommerce-shop.scss\";\r\nimport { Route } from \"react-router-dom\";\r\nimport axiosConfig from \"../../../axiosConfig\";\r\nimport swal from \"sweetalert\";\r\nclass EditDoctor extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: {},\r\n      fullname: \"\",\r\n      email: \"\",\r\n      mobileNumber: \"\",\r\n      date: \"\",\r\n      fromTime: \"\",\r\n      toTime: \"\",\r\n      consulting: \"\",\r\n      physicianVisitFees: \"\",\r\n      consultingFeesCharge: \"\",\r\n      ratePerMin: \"\",\r\n      days: \"\",\r\n      image: null,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    let { id } = this.props.match.params;\r\n    axiosConfig\r\n      .get(`/doctorPanel/viewById/${id}`)\r\n      .then((response) => {\r\n        // console.log(response.data.data);\r\n        const {\r\n          fullname,\r\n          email,\r\n          mobileNumber,\r\n          date,\r\n          fromTime,\r\n          toTime,\r\n          consulting,\r\n          physicianVisitFees,\r\n          consultingFeesCharge,\r\n          ratePerMin,\r\n          days,\r\n        } = response.data.data;\r\n        this.setState({\r\n          data: response.data.data,\r\n          fullname: fullname,\r\n          email: email,\r\n          mobileNumber: mobileNumber,\r\n          date: date,\r\n          fromTime: fromTime,\r\n          toTime: toTime,\r\n          consulting: consulting,\r\n          physicianVisitFees: physicianVisitFees,\r\n          consultingFeesCharge: consultingFeesCharge,\r\n          ratePerMin: ratePerMin,\r\n          days: days,\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.response);\r\n      });\r\n  }\r\n  handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    console.log(name, value);\r\n    this.setState({ [name]: value });\r\n  };\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const data = new FormData();\r\n    data.append(\"fullname\", this.state.fullname);\r\n    data.append(\"email\", this.state.email);\r\n    data.append(\"fromTime\", this.state.fromTime);\r\n    data.append(\"toTime\", this.state.toTime);\r\n    data.append(\"ratePerMin\", this.state.ratePerMin);\r\n    data.append(\"physicianVisitFees\", this.state.physicianVisitFees);\r\n    data.append(\"days\", this.state.days);\r\n    data.append(\"mobileNumber\", this.state.mobile);\r\n    data.append(\"date\", this.state.dob);\r\n    if (this.state.image !== null) {\r\n      data.append(\"image\", this.state.image);\r\n    }\r\n\r\n    for (var value of data.values()) {\r\n      console.log(value);\r\n    }\r\n\r\n    for (var key of data.keys()) {\r\n      console.log(key);\r\n    }\r\n    let { id } = this.props.match.params;\r\n    axiosConfig\r\n      .put(`/doctorPanel/doctor-edit/${id}`, data)\r\n      .then((response) => {\r\n        swal(\"Success!\", \"Profile updated successfully!\", \"success\");\r\n        this.componentDidMount(); // Refresh data after update\r\n      })\r\n      .catch((error) => {\r\n        swal(\"Error!\", \"Doctor Details , please try again.\", \"error\");\r\n        console.error(\"Error updating profile:\", error.response);\r\n      });\r\n  };\r\n  handlePicture = (e) => {\r\n    debugger;\r\n    this.setState({ image: e.target.files[0] });\r\n  };\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <div>\r\n          <Row>\r\n            <Col sm=\"12\">\r\n              <div>\r\n                <Breadcrumb listTag=\"div\">\r\n                  <BreadcrumbItem href=\"/analyticsDashboard\" tag=\"a\">\r\n                    Home\r\n                  </BreadcrumbItem>\r\n                  <BreadcrumbItem href=\"/userList/doctorList\" tag=\"a\">\r\n                    Doctor List\r\n                  </BreadcrumbItem>\r\n                  <BreadcrumbItem active>Edit Doctor</BreadcrumbItem>\r\n                </Breadcrumb>\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n          <Card className=\"overflow-hidden app-ecommerce-details\">\r\n            <Row className=\"m-2\">\r\n              <Col>\r\n                <h1 col-sm-6 className=\"float-left\">\r\n                  Edit Doctor\r\n                </h1>\r\n              </Col>\r\n              <Col>\r\n                <Route\r\n                  render={({ history }) => (\r\n                    <Button\r\n                      className=\" btn btn-danger float-right\"\r\n                      onClick={() => history.goBack()}\r\n                    >\r\n                      Back\r\n                    </Button>\r\n                  )}\r\n                />\r\n              </Col>\r\n            </Row>\r\n            <CardBody className=\"pb-0\">\r\n              <Form onSubmit={this.handleSubmit}>\r\n                <Row className=\"mb-5 mt-2\">\r\n                  <Col md=\"3\" sm=\"12\" className=\"mb-2\">\r\n                    <h4>Doctor Name</h4>\r\n                    <Input\r\n                      type=\"text\"\r\n                      name=\"fullname\"\r\n                      value={this.state.fullname}\r\n                      onChange={this.handleChange}\r\n                    />\r\n                  </Col>\r\n\r\n                  <Col md=\"3\" sm=\"12\" className=\"mb-2\">\r\n                    <h4> Email</h4>\r\n                    <Input\r\n                      type=\"email\"\r\n                      name=\"email\"\r\n                      value={this.state.email}\r\n                      onChange={this.handleChange}\r\n                    />\r\n                  </Col>\r\n                  <Col md=\"3\" sm=\"12\" className=\"mb-2\">\r\n                    <h4> MobileNumber</h4>\r\n                    <Input\r\n                      type=\"number\"\r\n                      name=\"mobileNumber\"\r\n                      value={this.state.mobileNumber}\r\n                      onChange={this.handleChange}\r\n                    />\r\n                  </Col>\r\n                  <Col md=\"3\" sm=\"12\" className=\"mb-2\">\r\n                    <h4> DOB</h4>\r\n                    <Input type=\"text\" name=\"date\" value={this.state.date} />\r\n                  </Col>\r\n                  <Col md=\"3\" sm=\"12\" className=\"mb-2\">\r\n                    <h4> PhysicianVisit Fees</h4>\r\n                    <Input\r\n                      type=\"text\"\r\n                      name=\"physicianVisitFees\"\r\n                      value={this.state.physicianVisitFees}\r\n                      onChange={this.handleChange}\r\n                    />\r\n                  </Col>\r\n\r\n                  <Col md=\"3\" sm=\"12\" className=\"mb-2\">\r\n                    <h4> ConsultingFees </h4>\r\n                    <Input\r\n                      type=\"text\"\r\n                      name=\"consultingFeesCharge\"\r\n                      value={this.state.consultingFeesCharge}\r\n                      onChange={this.handleChange}\r\n                    />\r\n                  </Col>\r\n                  <Col md=\"3\" sm=\"12\" className=\"mb-2\">\r\n                    <h4> Rate/Min </h4>\r\n                    <Input\r\n                      type=\"text\"\r\n                      name=\"ratePerMin\"\r\n                      value={this.state.ratePerMin}\r\n                      onChange={this.handleChange}\r\n                    />\r\n                  </Col>\r\n                  <Col md=\"3\" sm=\"12\" className=\"mb-2\">\r\n                    <h4> Days </h4>\r\n                    <Input type=\"text\" name=\"days\" value={this.state.days} />\r\n                  </Col>\r\n                  <Col md=\"3\" sm=\"12\" className=\"mb-2\">\r\n                    <h4> FromTime</h4>\r\n                    <Input\r\n                      type=\"time\"\r\n                      name=\"fromTime\"\r\n                      value={this.state.fromTime}\r\n                      onChange={this.handleChange}\r\n                    />\r\n                  </Col>\r\n                  <Col md=\"3\" sm=\"12\" className=\"mb-2\">\r\n                    <h4>ToTime</h4>\r\n                    <Input\r\n                      type=\"time\"\r\n                      name=\"toTime\"\r\n                      value={this.state.toTime}\r\n                      onChange={this.handleChange}\r\n                    />\r\n                  </Col>\r\n\r\n                  <Col md=\"3\" sm=\"12\" className=\"mb-2\">\r\n                    <Input\r\n                      className=\"mt-2\"\r\n                      type=\"file\"\r\n                      name=\"image\"\r\n                      onChange={this.handlePicture}\r\n                    />\r\n                  </Col>\r\n                </Row>\r\n                <Row className=\"my-2\">\r\n                  <Col>\r\n                    <Button type=\"submit\">Submit</Button>\r\n                  </Col>\r\n                </Row>\r\n              </Form>\r\n            </CardBody>\r\n          </Card>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\nexport default EditDoctor;\r\n","import unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nexport default function _createForOfIteratorHelper(o) {\n  if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n    if (Array.isArray(o) || (o = unsupportedIterableToArray(o))) {\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var it,\n      normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = o[Symbol.iterator]();\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}"],"sourceRoot":""}