{"version":3,"sources":["views/apps/productmanager/product/addpharmacategory.js"],"names":["AddCategoryForm","useState","categoryName","image","status","data","setData","history","useHistory","handleInputChange","e","target","name","value","sm","md","className","onClick","goBack","onSubmit","preventDefault","console","log","for","type","id","onChange","placeholder","required","imageFile","files","accept","row","label","checked","color"],"mappings":"2TAoGeA,UA/FS,WACtB,MAAwBC,mBAAS,CAC/BC,aAAc,GACdC,MAAO,KACPC,OAAO,WACP,mBAJKC,EAAI,KAAEC,EAAO,KAMdC,EAAUC,cAEVC,EAAoB,SAACC,GACzB,MAAwBA,EAAEC,OAAlBC,EAAI,EAAJA,KAAMC,EAAK,EAALA,MACdP,EAAQ,2BAAKD,GAAI,kBAAGO,EAAOC,MAoB7B,OACE,kBAAC,IAAG,KACF,kBAAC,IAAG,CAACC,GAAG,KAAKC,GAAG,IAAIC,UAAU,WAC5B,kBAAC,IAAI,KACH,kBAAC,IAAU,KAAC,mDACZ,kBAAC,IAAM,CAAEC,QAAS,kBAAMV,EAAQW,UAAWF,UAAU,+BAA6B,SAClF,kBAAC,IAAQ,KACP,kBAAC,IAAI,CAACG,SAnBK,SAACT,GACpBA,EAAEU,iBAEFC,QAAQC,IAAIjB,GAEZC,EAAQ,CAAEJ,aAAc,GAAIC,MAAO,SAezB,kBAAC,IAAS,KACR,kBAAC,IAAK,CAACoB,IAAI,gBAAc,kBACzB,kBAAC,IAAK,CACJC,KAAK,OACLZ,KAAK,eACLa,GAAG,eACHZ,MAAOR,EAAKH,aACZwB,SAAUjB,EACVkB,YAAY,sBACZC,UAAQ,KAGZ,kBAAC,IAAS,KACR,kBAAC,IAAK,CAACL,IAAI,SAAO,UAClB,kBAAC,IAAK,CACJC,KAAK,OACLZ,KAAK,QACLa,GAAG,QACHC,SA3CU,SAAChB,GACzB,IAAMmB,EAAYnB,EAAEC,OAAOmB,MAAM,GACjCxB,EAAQ,2BAAKD,GAAI,IAAEF,MAAO0B,MA0CZE,OAAO,UACPH,UAAQ,KAGZ,kBAAC,IAAS,CAACI,KAAG,GACZ,kBAAC,IAAK,CAACT,IAAI,SAAST,GAAI,GAAE,WAC1B,kBAAC,IAAG,CAACA,GAAI,IACP,kBAAC,IAAW,CACVU,KAAK,QACLC,GAAG,SACHb,KAAK,SACLqB,MAAM,SACNpB,MAAM,SACNqB,QAAyB,WAAhB7B,EAAKD,OACdsB,SAAUjB,IAEX,GACD,kBAAC,IAAW,CACVe,KAAK,QACLC,GAAG,WACHb,KAAK,SACLqB,MAAM,WACNpB,MAAM,WACNqB,QAAyB,aAAhB7B,EAAKD,OACdsB,SAAUjB,MAIhB,kBAAC,IAAM,CAAC0B,MAAM,UAAUX,KAAK,UAAQ","file":"static/js/357.d351f8fa.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport { Row, Col, Card, CardHeader, CardBody, Form, FormGroup, Label, Input, Button, CustomInput } from \"reactstrap\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\n\r\nconst AddCategoryForm = () => {\r\n  const [data, setData] = useState({\r\n    categoryName: \"\",\r\n    image: null,\r\n    status:'active',\r\n  });\r\n\r\n  const history = useHistory();\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setData({ ...data, [name]: value });\r\n  };\r\n\r\n  const handleImageChange = (e) => {\r\n    const imageFile = e.target.files[0];\r\n    setData({ ...data, image: imageFile });\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    console.log(data);\r\n\r\n    setData({ categoryName: \"\", image: null });\r\n  };\r\n\r\n//   const handleBack = () => {\r\n//     history.goBack();\r\n//   };\r\n\r\n  return (\r\n    <Row>\r\n      <Col sm=\"12\" md=\"8\" className=\"mx-auto\">\r\n        <Card>\r\n          <CardHeader><h1>Add Pharma Category</h1>\r\n          <Button  onClick={() => history.goBack()}  className=\" btn btn-danger float-right\">Back</Button></CardHeader>\r\n          <CardBody>\r\n            <Form onSubmit={handleSubmit}>\r\n              <FormGroup>\r\n                <Label for=\"categoryName\">Category Name:</Label>\r\n                <Input\r\n                  type=\"text\"\r\n                  name=\"categoryName\"\r\n                  id=\"categoryName\"\r\n                  value={data.categoryName}\r\n                  onChange={handleInputChange}\r\n                  placeholder=\"Enter category name\"\r\n                  required\r\n                />\r\n              </FormGroup>\r\n              <FormGroup>\r\n                <Label for=\"image\">Image:</Label>\r\n                <Input\r\n                  type=\"file\"\r\n                  name=\"image\"\r\n                  id=\"image\"\r\n                  onChange={handleImageChange}\r\n                  accept=\"image/*\"\r\n                  required\r\n                />\r\n              </FormGroup>\r\n              <FormGroup row>\r\n                <Label for=\"status\" sm={2}>Status:</Label>\r\n                <Col sm={10}>\r\n                  <CustomInput\r\n                    type=\"radio\"\r\n                    id=\"active\"\r\n                    name=\"status\"\r\n                    label=\"Active\"\r\n                    value=\"active\"\r\n                    checked={data.status === \"active\"}\r\n                    onChange={handleInputChange}\r\n                  />\r\n                  {''}\r\n                  <CustomInput\r\n                    type=\"radio\"\r\n                    id=\"inactive\"\r\n                    name=\"status\"\r\n                    label=\"Inactive\"\r\n                    value=\"inactive\"\r\n                    checked={data.status === \"inactive\"}\r\n                    onChange={handleInputChange}\r\n                  />\r\n                </Col>\r\n              </FormGroup>\r\n              <Button color=\"primary\" type=\"submit\">Submit</Button>\r\n            </Form>\r\n          </CardBody>\r\n        </Card>\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default AddCategoryForm;\r\n"],"sourceRoot":""}