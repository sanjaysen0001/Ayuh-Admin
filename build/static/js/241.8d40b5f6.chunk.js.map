{"version":3,"sources":["views/apps/prediction/EditPrediction.js"],"names":["EditPrediction","props","changeHandler1","e","setState","status","target","value","changeHandler","name","submitHandler","preventDefault","id","match","params","axiosConfig","post","state","then","response","console","log","swal","history","push","catch","error","title","rashiName","pre_type","desc","this","get","data","breadCrumbTitle","breadCrumbParent","breadCrumbActive","className","col-sm-6","render","onClick","onSubmit","lg","md","sm","required","type","placeholder","onChange","selected","style","marginRight","Ripple","color","Component"],"mappings":"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","file":"static/js/241.8d40b5f6.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Col,\r\n  Form,\r\n  Row,\r\n  Input,\r\n  Label,\r\n  Button,\r\n} from \"reactstrap\";\r\n//import axios from \"axios\";\r\nimport axiosConfig from \"../../../axiosConfig\";\r\n// import { useParams } from \"react-router-dom\";\r\n//import { ToastContainer, toast } from 'react-toastify';\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { Route } from \"react-router-dom\";\r\nimport Breadcrumbs from \"../../../components/@vuexy/breadCrumbs/BreadCrumb\";\r\n\r\nimport swal from \"sweetalert\";\r\nexport class EditPrediction extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      title: \"\",\r\n      rashiName: \"\",\r\n      pre_type: \"\",\r\n      desc: \"\",\r\n      status: \"\",\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    let { id } = this.props.match.params;\r\n    axiosConfig\r\n      .get(`admin/getonePridiction/${id}`)\r\n      .then((response) => {\r\n        console.log(response);\r\n        this.setState({\r\n          title: response.data.data.title,\r\n          rashiName: response.data.data.rashiName,\r\n          pre_type: response.data.data.pre_type,\r\n          desc: response.data.data.desc,\r\n          status: response.data.data.status,\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }\r\n  changeHandler1 = (e) => {\r\n    this.setState({ status: e.target.value });\r\n  };\r\n\r\n  changeHandler = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n  submitHandler = (e) => {\r\n    e.preventDefault();\r\n    let { id } = this.props.match.params;\r\n    axiosConfig\r\n      .post(`admin/editPridiction/${id}`, this.state)\r\n      .then((response) => {\r\n        console.log(response);\r\n        swal(\"Success!\", \"Submitted SuccessFull!\", \"success\");\r\n        this.props.history.push(\"/app/prediction/predictionList\");\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Breadcrumbs\r\n          breadCrumbTitle=\"Predictoin\"\r\n          breadCrumbParent=\"Home\"\r\n          breadCrumbActive=\"Edit Predictoin \"\r\n        />\r\n        <Card>\r\n          <Row className=\"m-2\">\r\n            <Col>\r\n              <h1 col-sm-6 className=\"float-left\">\r\n                Edit Prediction\r\n              </h1>\r\n            </Col>\r\n            <Col>\r\n              <Route\r\n                render={({ history }) => (\r\n                  <Button\r\n                    className=\" btn btn-danger float-right\"\r\n                    onClick={() =>\r\n                      history.push(\"/app/prediction/predictionList\")\r\n                    }\r\n                  >\r\n                    Back\r\n                  </Button>\r\n                )}\r\n              />\r\n            </Col>\r\n          </Row>\r\n          <CardBody>\r\n            <Form className=\"m-1\" onSubmit={this.submitHandler}>\r\n              <Row>\r\n                <Col lg=\"6\" md=\"6\" sm=\"6\" className=\"mb-2\">\r\n                  <Label>Title</Label>\r\n                  <Input\r\n                    required\r\n                    type=\"text\"\r\n                    name=\"title\"\r\n                    placeholder=\"Enter Title\"\r\n                    value={this.state.title}\r\n                    onChange={this.changeHandler}\r\n                  ></Input>\r\n                </Col>\r\n                <Col lg=\"6\" md=\"6\" sm=\"6\" className=\"mb-2\">\r\n                  <Label>Prediction Type</Label>\r\n\r\n                  <Input\r\n                    required\r\n                    type=\"select\"\r\n                    name=\"pre_type\"\r\n                    value={this.state.pre_type}\r\n                    onChange={this.changeHandler}\r\n                  >\r\n                    <option selected>---Select---</option>\r\n                    <option>Daily</option>\r\n                    <option>Weekly</option>\r\n                    <option>Monthly</option>\r\n                  </Input>\r\n                </Col>\r\n\r\n                <Col lg=\"6\" md=\"6\" sm=\"6\" className=\"mb-2\">\r\n                  <Label>Rashi name</Label>\r\n                  <Input\r\n                    required\r\n                    type=\"select\"\r\n                    name=\"rashiName\"\r\n                    value={this.state.rashiName}\r\n                    onChange={this.changeHandler}\r\n                  >\r\n                    <option>---Select Rashi---</option>\r\n                    <option>Aries</option>\r\n                    <option>Taurus</option>\r\n                    <option>Gemini</option>\r\n                    <option>Cancer</option>\r\n                    <option>Leo</option>\r\n                    <option>Virgo</option>\r\n                    <option>Libra</option>\r\n                    <option>Scorpio</option>\r\n                    <option>Saggitarius</option>\r\n                    <option>Capricorn</option>\r\n                    <option>Aquarius</option>\r\n                    <option>Pisces</option>\r\n                  </Input>\r\n                </Col>\r\n\r\n                <Col lg=\"6\" md=\"6\" sm=\"6\" className=\"mb-2\">\r\n                  <Label>Description</Label>\r\n                  <Input\r\n                    required\r\n                    type=\"textarea\"\r\n                    name=\"desc\"\r\n                    placeholder=\"Enter desc\"\r\n                    value={this.state.desc}\r\n                    onChange={this.changeHandler}\r\n                  ></Input>\r\n                </Col>\r\n                <Col lg=\"6\" md=\"6\" sm=\"6\" className=\"mb-2\">\r\n                  <Label className=\"mb-1\">Status</Label>\r\n                  <div\r\n                    className=\"form-label-group\"\r\n                    onChange={(e) => this.changeHandler1(e)}\r\n                  >\r\n                    <input\r\n                      style={{ marginRight: \"3px\" }}\r\n                      type=\"radio\"\r\n                      name=\"status\"\r\n                      value=\"Active\"\r\n                    />\r\n                    <span style={{ marginRight: \"20px\" }}>Active</span>\r\n\r\n                    <input\r\n                      style={{ marginRight: \"3px\" }}\r\n                      type=\"radio\"\r\n                      name=\"status\"\r\n                      value=\"Inactive\"\r\n                    />\r\n                    <span style={{ marginRight: \"3px\" }}>Inactive</span>\r\n                  </div>\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                <Col lg=\"6\" md=\"6\" sm=\"6\" className=\"mb-2\">\r\n                  <Button.Ripple\r\n                    color=\"primary\"\r\n                    type=\"submit\"\r\n                    className=\"mr-1 mb-1\"\r\n                  >\r\n                    Add\r\n                  </Button.Ripple>\r\n                </Col>\r\n              </Row>\r\n            </Form>\r\n          </CardBody>\r\n        </Card>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default EditPrediction;\r\n"],"sourceRoot":""}