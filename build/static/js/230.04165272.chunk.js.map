{"version":3,"sources":["views/apps/pagesetup/privacypolicy/AddPrivacyPolicy.js"],"names":["AddPrivacyPolicy","props","uploadImageCallBack","file","Promise","resolve","reject","xhr","XMLHttpRequest","open","setRequestHeader","data","FormData","append","send","addEventListener","response","JSON","parse","responseText","error","onEditorStateChange","editorState","setState","desc","draftToHtml","convertToRaw","getCurrentContent","changeHandler1","e","status","target","value","changeHandler","name","submitHandler","preventDefault","axiosConfig","post","state","then","console","log","swal","history","push","catch","title","EditorState","createEmpty","sm","className","col-sm-6","render","color","onClick","onSubmit","this","lg","md","required","type","placeholder","onChange","toolbarClassName","wrapperClassName","editorClassName","toolbar","options","inline","bold","italic","underline","strikethrough","code","blockType","fontSize","fontFamily","Ripple","Component"],"mappings":"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","file":"static/js/230.04165272.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Row,\r\n  Col,\r\n  Form,\r\n  Label,\r\n  Input,\r\n  CustomInput,\r\n  Button,\r\n  Breadcrumb,\r\n  BreadcrumbItem,\r\n} from \"reactstrap\";\r\nimport axiosConfig from \"../../../../axiosConfig\";\r\nimport swal from \"sweetalert\";\r\nimport { Route } from \"react-router-dom\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { EditorState, convertToRaw } from \"draft-js\";\r\nimport { Editor } from \"react-draft-wysiwyg\";\r\nimport draftToHtml from \"draftjs-to-html\";\r\nimport \"react-draft-wysiwyg/dist/react-draft-wysiwyg.css\";\r\nimport \"../../../../assets/scss/plugins/extensions/editor.scss\";\r\nexport default class AddPrivacyPolicy extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      title: \"\",\r\n      desc: \"\",\r\n      editorState: EditorState.createEmpty(),\r\n    };\r\n  }\r\n\r\n  uploadImageCallBack = (file) => {\r\n    return new Promise((resolve, reject) => {\r\n      const xhr = new XMLHttpRequest();\r\n      xhr.open(\"POST\", \"https://api.imgur.com/3/image\");\r\n      xhr.setRequestHeader(\"Authorization\", \"Client-ID 7e1c3e366d22aa3\");\r\n      const data = new FormData();\r\n      data.append(\"image\", file);\r\n      xhr.send(data);\r\n      xhr.addEventListener(\"load\", () => {\r\n        const response = JSON.parse(xhr.responseText);\r\n        resolve(response);\r\n      });\r\n      xhr.addEventListener(\"error\", () => {\r\n        const error = JSON.parse(xhr.responseText);\r\n        reject(error);\r\n      });\r\n    });\r\n  };\r\n\r\n  onEditorStateChange = (editorState) => {\r\n    this.setState({\r\n      editorState,\r\n      desc: draftToHtml(convertToRaw(editorState.getCurrentContent())),\r\n    });\r\n  };\r\n  changeHandler1 = (e) => {\r\n    this.setState({ status: e.target.value });\r\n  };\r\n\r\n  changeHandler = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n  submitHandler = (e) => {\r\n    e.preventDefault();\r\n\r\n    axiosConfig\r\n      .post(\"/admin/addprivcyPlcy\", this.state)\r\n\r\n      .then((response) => {\r\n        console.log(response.data);\r\n\r\n        swal(\"Success!\", \"Submitted SuccessFull!\", \"success\");\r\n        this.props.history.push(\r\n          \"/app/pagesetup/privacypolicy/privacyPolicyList\"\r\n        );\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Row>\r\n          <Col sm=\"12\">\r\n            <div>\r\n              {/* <Breadcrumb listTag=\"div\">\r\n                <BreadcrumbItem href=\"/analyticsDashboard\" tag=\"a\">\r\n                  Home\r\n                </BreadcrumbItem>\r\n                <BreadcrumbItem\r\n                  href=\"/app/pagesetup/privacypolicy/privacyPolicyList\"\r\n                  tag=\"a\"\r\n                >\r\n                  Privacy Policy List\r\n                </BreadcrumbItem>\r\n                <BreadcrumbItem active>Add Privacy Policy</BreadcrumbItem>\r\n              </Breadcrumb> */}\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n        <Card>\r\n          <Row className=\"m-2\">\r\n            <Col>\r\n              <h1 col-sm-6 className=\"float-left\">\r\n                Add Privacy Policy\r\n              </h1>\r\n            </Col>\r\n            <Col>\r\n              <Route\r\n                render={({ history }) => (\r\n                  <Button\r\n                  color=\"danger\"\r\n                    className=\" btn btn-success float-right\"\r\n                    onClick={() =>\r\n                      history.push(\r\n                        \"/app/pagesetup/privacypolicy/privacyPolicyList\"\r\n                      )\r\n                    }\r\n                  >\r\n                    Back\r\n                  </Button>\r\n                )}\r\n              />\r\n            </Col>\r\n          </Row>\r\n          <CardBody>\r\n            <Form className=\"m-1\" onSubmit={this.submitHandler}>\r\n              <Row>\r\n                <Col lg=\"6\" md=\"6\" sm=\"6\" className=\"mb-2\">\r\n                  <Label>Title</Label>\r\n                  <Input\r\n                    required\r\n                    type=\"text\"\r\n                    name=\"title\"\r\n                    placeholder=\"\"\r\n                    value={this.state.title}\r\n                    onChange={this.changeHandler}\r\n                  ></Input>\r\n                </Col>\r\n                <Row></Row>\r\n                <Col lg=\"12\" md=\"12\" sm=\"12\" className=\"mb-2\">\r\n                  <Label>Description</Label>\r\n                  <Editor\r\n                    toolbarClassName=\"demo-toolbar-absolute\"\r\n                    wrapperClassName=\"demo-wrapper\"\r\n                    editorClassName=\"demo-editor\"\r\n                    editorState={this.state.editorState}\r\n                    onEditorStateChange={this.onEditorStateChange}\r\n                    toolbar={{\r\n                      options: [\r\n                        \"inline\",\r\n                        \"blockType\",\r\n                        \"fontSize\",\r\n                        \"fontFamily\",\r\n                      ],\r\n                      inline: {\r\n                        options: [\r\n                          \"bold\",\r\n                          \"italic\",\r\n                          \"underline\",\r\n                          \"strikethrough\",\r\n                          \"monospace\",\r\n                        ],\r\n                        bold: { className: \"bordered-option-classname\" },\r\n                        italic: { className: \"bordered-option-classname\" },\r\n                        underline: { className: \"bordered-option-classname\" },\r\n                        strikethrough: {\r\n                          className: \"bordered-option-classname\",\r\n                        },\r\n                        code: { className: \"bordered-option-classname\" },\r\n                      },\r\n                      blockType: {\r\n                        className: \"bordered-option-classname\",\r\n                      },\r\n                      fontSize: {\r\n                        className: \"bordered-option-classname\",\r\n                      },\r\n                      fontFamily: {\r\n                        className: \"bordered-option-classname\",\r\n                      },\r\n                    }}\r\n                  />\r\n                  <br />\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                <Col lg=\"6\" md=\"6\" sm=\"6\" className=\"mb-2\">\r\n                  <Button.Ripple\r\n                    color=\"primary\"\r\n                    type=\"submit\"\r\n                    className=\"mr-1 mb-1\"\r\n                  >\r\n                    Add\r\n                  </Button.Ripple>\r\n                </Col>\r\n              </Row>\r\n            </Form>\r\n          </CardBody>\r\n        </Card>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"],"sourceRoot":""}